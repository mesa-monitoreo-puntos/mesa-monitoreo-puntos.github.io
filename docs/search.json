[
  {
    "objectID": "sesiones/sesiones.html",
    "href": "sesiones/sesiones.html",
    "title": "Sesiones",
    "section": "",
    "text": "Fecha\n\n\nNúmero de sesión\n\n\nTemas tratados\n\n\nAcuerdos\n\n\n\n\n19 de diciembre de 2022\n\n\n21\n\n\nVinculación internacional de GEO con SIMOCUTE y Mesa Técnica de Monitoreo por Puntos: , ya que era un tema informativo. Se hizo una breve introducción sobre GEO (Gruop on Earth Observations) que incluye información satelital, el cual tiene portales para divulgar información. Menciona que Costa Rica tiene una representación en GEO, en donde Rafael Monge y Marilyn Calvo son los representantes del país. áreas de trabajo en GEO que están relacionadas con los objetivos de desarrollo sostenible (ODS). Amerigeo es el grupo que se realiza para América Latina.\n\n\n\nAcuerdo de Amerigeo: en el 2023 Costa Rica será el anfitrión de la siguiente reunión de Amerigeo. Costa Rica, Perú y Estados Unidos son los responsables para desarrollar la próxima reunión de Amerigeo\n\n\n\n\n\n\n\n\n\nOportunidades de Cooperación con la Agencia Espacial de Perú. Se rigen por Comisión Nacional de Investigación y Desarrollo Espacial (CONIDA), cuya misión es “Promover, investigar, desarrollar y difundir ciencia y tecnología espacial, generando productos y servicios que contribuyan al desarrollo socioeconómico y seguridad de la nación, que impulse el posicionamiento espacial en la región”. A nivel internacional también tienen proyectos que se han realizado con universidades y países vecinos, incluyendo algunas organizaciones internacionales. Esto ha generado que se desarrollen experiencias a nivel latinoamericano.\n\n\n\nIdentificar un proyecto en común entre ambos países.\n\n\n\n\n\n\n\n\nDiscusión sobre propuesta de plan de trabajo de la Mesa para el año 2023.\n\n\nSe aprueba plan de trabajo."
  },
  {
    "objectID": "evm-casos-estudio/posts/evm-caso-estudio-01.html",
    "href": "evm-casos-estudio/posts/evm-caso-estudio-01.html",
    "title": "SIMOCUTE - Ejercicio metodológico de interpretación de puntos de muestreo",
    "section": "",
    "text": "FIESTA es una biblioteca de software para análisis de datos de inventarios forestales. En este documento se explica el uso de FIESTA mediante un caso de ejemplo basado en un conjunto de datos interpretados por funcionarios e investigadores de instituciones que forman parte de la Mesa de Monitoreo por Puntos de SIMOCUTE."
  },
  {
    "objectID": "evm-casos-estudio/posts/evm-caso-estudio-01.html#resumen",
    "href": "evm-casos-estudio/posts/evm-caso-estudio-01.html#resumen",
    "title": "SIMOCUTE - Ejercicio metodológico de interpretación de puntos de muestreo",
    "section": "",
    "text": "FIESTA es una biblioteca de software para análisis de datos de inventarios forestales. En este documento se explica el uso de FIESTA mediante un caso de ejemplo basado en un conjunto de datos interpretados por funcionarios e investigadores de instituciones que forman parte de la Mesa de Monitoreo por Puntos de SIMOCUTE."
  },
  {
    "objectID": "evm-casos-estudio/posts/evm-caso-estudio-01.html#introducción",
    "href": "evm-casos-estudio/posts/evm-caso-estudio-01.html#introducción",
    "title": "SIMOCUTE - Ejercicio metodológico de interpretación de puntos de muestreo",
    "section": "Introducción",
    "text": "Introducción\nFIESTA (Forest Inventory Estimation and Analysis) es una biblioteca de software, desarrollada en el lenguaje de programación R, para el análisis de datos de inventarios forestales basados en muestras. Fue desarrollada por el Programa de Inventario y Análisis Forestal (FIA) del Servicio Forestal del Departamento de Agricultura (USDA) de los Estados Unidos.\nEn este documento se detalla el análisis, mediante FIESTA, de un conjunto de datos de 26125 puntos de muestreo de 1045 parcelas de monitoreo, ubicadas en la zona norte de Costa Rica. Estos datos provienen de un ejercicio de interpretación de puntos de muestreo, realizado en el marco del Sistema Nacional de Monitoreo del Uso, Cobertura y Ecosistemas de Costa Rica (SIMOCUTE), en el cual participaron 26 investigadores y funcionarios de diferentes instituciones y organizaciones que forman parte de la Mesa de Monitoreo por Puntos. La interpretación se realizó con la plataforma Collect Earth Online, un sistema colaborativo para la interpretación de imágenes satelitales.\nPara cada punto se interpretaron las variables:\n\nCobertura de la tierra.\nUso del suelo.\n\nLa interpretación se realizó en dos tiempos:\n\nt1: entre 2005 y 2007.\nt2: en 2019.\n\nEl documento fue desarrollado en el sistema de publicación técnica y científica Quarto, el cual combina código en R y sus salidas (tablas, gráficos, mapas) con texto en Markdown."
  },
  {
    "objectID": "evm-casos-estudio/posts/evm-caso-estudio-01.html#trabajo-previo-al-análisis",
    "href": "evm-casos-estudio/posts/evm-caso-estudio-01.html#trabajo-previo-al-análisis",
    "title": "SIMOCUTE - Ejercicio metodológico de interpretación de puntos de muestreo",
    "section": "Trabajo previo al análisis",
    "text": "Trabajo previo al análisis\n\nInstalación de software\n\nSistema base de R y herramientas de desarrollo\nPara trabajar con FIESTA, se debe instalar:\n\nEl sistema base de R. R es un lenguaje de programación enfocado en análisis estadístico y visualización de datos.\nLa interfaz de desarrollo integrada RStudio Desktop, la cual proporciona un editor de texto y otras herramientas para escribir programas en R y visualizar sus resultados, entre otras facilidades. También pueden emplearse otros ambientes de desarrollo que ofrecen características similares (ej. Visual Studio Code).\n\n\nVersión mínima de R\nDe acuerdo con su documentación, la versión mínima de R que requiere FIESTA, a la fecha de escritura de este documento (2023-12-02), es la 4.2.0. Puede consultar la versión de su instalación al ejecutar el siguiente comando en la consola de R:\n\n# Versión de R\nR.version.string\n\n[1] \"R version 4.3.2 (2023-10-31 ucrt)\"\n\n\nLa salida del comando anterior debe indicar que la versión de su instalación de R es mayor o igual a 4.2.0.\n\n\n\nPaquetes de R\n\nFIESTA\nEl paquete FIESTA está disponible en CRAN (Comprehensive R Archive Network), un repositorio en línea que alberga una amplia colección de paquetes y extensiones para el lenguaje de programación R, lo que facilita su instalación y actualización a nuevas versiones.\nPara usar FIESTA, debe instalarse primero. Puede utilizar la función install.packages().\n\n# Instalación del paquete FIESTA\ninstall.packages(\"FIESTA\")\n\nEl resultado de la instalación puede verificarse al cargar el paquete con la función library().\n\n# Carga del paquete FIESTA\nlibrary(FIESTA)\n\nSi el comando anterior no genera ningún mensaje de error, FIESTA debe haberse instalado adecuadamente.\n\n\nOtros\nAdemás de FIESTA, se recomienda instalar los siguientes paquetes para procesamiento y visualización de datos.\n\n# Paquete para el desarrollo de documentos computacionales\ninstall.packages(\"rmarkdown\")\n\n# Colección de paquetes para análisis de datos\ninstall.packages(\"tidyverse\")\n\n# Estilos para gráficos de tidyverse\ninstall.packages(\"ggthemes\")\n\n# Paquete para limpieza de datos\ninstall.packages(\"janitor\")\n\n# Paquete para tablas interactivas\ninstall.packages(\"DT\")\n\n# Paquete para graficación interactiva\ninstall.packages(\"plotly\")\n\n# Paquete para mapas interactivos\ninstall.packages(\"leaflet\")\n\n# Funciones adicionales para leaflet\ninstall.packages(\"leaflet.extras\")\n\n# Funciones adicionales para leaflet\ninstall.packages(\"leafem\")\n\nLuego de instalarlos, debe cargar los paquetes con la función library().\n\n# Carga de paquetes adicionales\nlibrary(rmarkdown)\nlibrary(tidyverse)\nlibrary(ggthemes)\nlibrary(janitor)\nlibrary(DT)\nlibrary(plotly)\nlibrary(leaflet)\nlibrary(leaflet.extras)\nlibrary(leafem)\nlibrary(sf) # se instala con FIESTA\n\n\n\n\n\nObtención de este repositorio\nEste documento, junto con otros similares, forma parte de un repositorio en GitHub, una plataforma en línea para compartir código fuente de aplicaciones, basada en el sistema de control de versiones Git. El repositorio contiene el código fuente del documento y los datos que se utilizan en los ejemplos. Su dirección es https://github.com/mesa-monitoreo-puntos/fiesta.\nPuede descargar el repositorio, como un archivo ZIP, de https://github.com/mesa-monitoreo-puntos/fiesta/archive/refs/heads/main.zip\nTambién puede “clonar” el repositorio mediante el comando clone de Git:\n# Clonación de este repositorio\ngit clone https://github.com/mesa-monitoreo-puntos/fiesta.git\nUna vez que el repositorio haya sido descargado o clonado, puede abrirse con RStudio o con otra herramienta de desarrollo.\n\n\nVariables generales\nEn esta sección se definen algunas variables generales del proceso, incluyendo:\n\nLa ruta al archivo con los datos de puntos de muestreo.\nLos códigos de los colores de las clases de cobertura de la tierra y uso del suelo.\nEl área de la zona de estudio.\n\n\n\nCódigo para la definición de variables generales\n# Ruta a los datos de puntos de muestreo\nARCHIVO_PUNTOS &lt;- \"../../datos/Resul_Fin_2Grupos_SinReplicas_csv_Fix.csv\"\n\n# Colores\nCOLOR_VEGETACION         = \"#00a600\" # Corine EU - Coniferous forest\nCOLOR_SIN_VEGETACION     = \"#dcdcc8\" # Corine CR - Tierras desnudas o degradadas\nCOLOR_AGUA               = \"#00ccf2\" # Corine EU - Water courses\nCOLOR_NUBES_Y_SOMBRAS    = \"#800080\" # Púrpura\nCOLOR_SIN_INFORMACION    = \"#000000\" # Negro\n\nCOLOR_MC_BOSQUES         = \"#266900\" # Corine CR - Bosque denso\nCOLOR_AGRICULTURA        = \"#Becd05\" # Corine CR - Mosaico de cultivos\nCOLOR_GANADERIA_Y_PASTOS = \"#ffffa6\" # Corine CR - Pastos limpios\nCOLOR_ZONAS_HUMEDALES    = \"#00ccf2\" # Corine EU - Water courses\nCOLOR_NO_CLASIFICACION   = \"#000000\" # Negro\nCOLOR_INFRAESTRUCTURA    = \"#f6d9df\" # Corine CR - Zona urbana continua\nCOLOR_OTRAS_TIERRAS      = \"#005acf\" # Corine CR - Canales\n\nCOLOR_NULO               = \"#808080\" # Gris\n\n# Paleta de colores de tipos de cobertura de la tierra\nCOLORES_COBERTURA &lt;- \n    c(\n        \"1000-Vegetacion\"         = COLOR_VEGETACION,\n        \"T1-1000-Vegetacion\"      = COLOR_VEGETACION,\n        \"T2-1000-Vegetacion\"      = COLOR_VEGETACION,\n        \"2000-Sin vegetacion\"     = COLOR_SIN_VEGETACION, \n        \"T1-2000-Sin vegetacion\"  = COLOR_SIN_VEGETACION,\n        \"T2-2000-Sin vegetacion\"  = COLOR_SIN_VEGETACION,\n        \"3000-Agua\"               = COLOR_AGUA, \n        \"T1-3000-Agua\"            = COLOR_AGUA,\n        \"T2-3000-Agua\"            = COLOR_AGUA,\n        \"4000-Nubes y sombras\"    = COLOR_NUBES_Y_SOMBRAS,\n        \"T1-4000-Nubes y sombras\" = COLOR_NUBES_Y_SOMBRAS,\n        \"T2-4000-Nubes y sombras\" = COLOR_NUBES_Y_SOMBRAS,\n        \"5000-Sin informacion\"    = COLOR_SIN_INFORMACION,\n        \"T1-5000-Sin informacion\" = COLOR_SIN_INFORMACION,\n        \"T2-5000-Sin informacion\" = COLOR_SIN_INFORMACION,\n        \"Nulo\"                    = COLOR_NULO,\n        \"T1-Nulo\"                 = COLOR_NULO,\n        \"T2-Nulo\"                 = COLOR_NULO\n    )\n\n# Paleta de colores de tipos de uso de la tierra\nCOLORES_USO &lt;- \n    c(\n        \"1000-MC bosques\"       = COLOR_MC_BOSQUES,\n        \"T1-1000-MC bosques\"    = COLOR_MC_BOSQUES,\n        \"T2-1000-MC bosques\"    = COLOR_MC_BOSQUES,\n        \"2000-Agricultura\"      = COLOR_AGRICULTURA,\n        \"T1-2000-Agricultura\"   = COLOR_AGRICULTURA,\n        \"T2-2000-Agricultura\"   = COLOR_AGRICULTURA,\n        \"3000-Ganad y past\"     = COLOR_GANADERIA_Y_PASTOS,\n        \"T1-3000-Ganad y past\"  = COLOR_GANADERIA_Y_PASTOS,\n        \"T2-3000-Ganad y past\"  = COLOR_GANADERIA_Y_PASTOS,\n        \"4000-Zonas humed\"      = COLOR_ZONAS_HUMEDALES,\n        \"T1-4000-Zonas humed\"   = COLOR_ZONAS_HUMEDALES,\n        \"T2-4000-Zonas humed\"   = COLOR_ZONAS_HUMEDALES,\n        \"5000-Infraest\"         = COLOR_INFRAESTRUCTURA,\n        \"T1-5000-Infraest\"      = COLOR_INFRAESTRUCTURA,\n        \"T2-5000-Infraest\"      = COLOR_INFRAESTRUCTURA,\n        \"6000-Otras tierras\"    = COLOR_OTRAS_TIERRAS,\n        \"T1-6000-Otras tierras\" = COLOR_OTRAS_TIERRAS,\n        \"T2-6000-Otras tierras\" = COLOR_OTRAS_TIERRAS,\n        \"7000 No clasif\"        = COLOR_NO_CLASIFICACION,\n        \"T1-7000 No clasif\"     = COLOR_NO_CLASIFICACION,\n        \"T2-7000 No clasif\"     = COLOR_NO_CLASIFICACION,\n        \"Nulo\"                  = COLOR_NULO,\n        \"T1-Nulo\"               = COLOR_NULO,\n        \"T2-Nulo\"               = COLOR_NULO\n    )\n\n# Área de estudio en hectáreas\nAREA_ESTUDIO = 318167.67"
  },
  {
    "objectID": "evm-casos-estudio/posts/evm-caso-estudio-01.html#carga-y-limpieza-de-datos",
    "href": "evm-casos-estudio/posts/evm-caso-estudio-01.html#carga-y-limpieza-de-datos",
    "title": "SIMOCUTE - Ejercicio metodológico de interpretación de puntos de muestreo",
    "section": "Carga y limpieza de datos",
    "text": "Carga y limpieza de datos\nLos datos de los puntos de muestreo se proporcionaron en un archivo CSV. En el siguiente bloque de código se cargan en el dataframe puntos. Los nombres de las columnas se “limpian” para evitar la presencia de números al inicio y otros problemas que dificultan su manejo. Los valores nulos (NA) se convierten a hileras de texto.\n\n\nCódigo para la carga y limpieza de datos\n# Carga de datos de puntos de muestreo\npuntos &lt;- read_delim(ARCHIVO_PUNTOS)\n\n# Limpieza de los nombres de columnas\npuntos &lt;- clean_names(puntos)\n\n# Reemplazo de valores NA por la hilera \"Nulo\"\npuntos &lt;- \n    puntos |&gt; \n    mutate(\n        t1_cobertura = replace_na(t1_cobertura, \"Nulo\"),\n        t2_cobertura = replace_na(t2_cobertura, \"Nulo\"),\n        t1_uso = replace_na(t1_uso, \"Nulo\"),\n        t2_uso = replace_na(t2_uso, \"Nulo\")\n    )\n\n# Coversión a de t1_cobertura, t2_cobertura, t1_uso y t2_uso a factores\npuntos &lt;-\n    puntos |&gt;\n    mutate(\n        t1_cobertura = factor(t1_cobertura, levels = unique(t1_cobertura)),\n        t2_cobertura = factor(t2_cobertura, levels = unique(t2_cobertura)),\n        t1_uso = factor(t1_uso, levels = unique(t1_uso)),\n        t2_uso = factor(t2_uso, levels = unique(t2_uso))        \n    )\n\n\nEl dataframe puntos contiene más de 40 columnas, provenientes del archivo CSV. Algunas de las más importantes para efectos de este análisis son:\n\nplot_id: identificador de la parcela.\nsample_id: identificador del punto de muestreo.\nt1_cobertura: interpretación de la variable de cobertura de la tierra en t1.\nt2_cobertura: interpretación de la variable de cobertura de la tierra en t2.\nt1_uso: interpretación de la variable de uso del suelo en t1.\nt2_uso: interpretación de la variable de uso del suelo en t2.\n\nLa siguiente tabla muestra las columnas mencionadas.\n\n\nCódigo para el despliegue de la tabla\n# Despliegue de los datos de puntos de muestreo en una tabla\npuntos |&gt;\n    select(plot_id, sample_id, t1_cobertura, t2_cobertura, t1_uso, t2_uso) |&gt;\n    datatable(\n        caption = \"Puntos de muestreo de cobertura y uso de la tierra\",\n        rownames = FALSE,\n        colnames = c(\n            \"plot_id\", \"sample_id\", \n            \"t1_cobertura\", \"t2_cobertura\",\n            \"t1_uso\", \"t2_uso\"\n        ),\n        options = list(\n            pageLength = 5,\n            language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Spanish.json')\n        )\n    )"
  },
  {
    "objectID": "evm-casos-estudio/posts/evm-caso-estudio-01.html#análisis-con-paquetes-básicos-de-r",
    "href": "evm-casos-estudio/posts/evm-caso-estudio-01.html#análisis-con-paquetes-básicos-de-r",
    "title": "SIMOCUTE - Ejercicio metodológico de interpretación de puntos de muestreo",
    "section": "Análisis con paquetes básicos de R",
    "text": "Análisis con paquetes básicos de R\nEn esta sección, se analizan los datos con paquetes de R como los de la colección de Tidyverse, Plotly R para gráficos estadísticos interactivos y Leaflet R para mapas interactivos.\nPrimero se analiza la variable de cobertura de la tierra y posteriormente la variable de uso del suelo.\n\nCobertura de la tierra\n\nMapa\nEl siguiente mapa interactivo, implementado con el paquete Leaflet, muestra la distribución espacial de la interpretación de la variable de cobertura de la tierra en t1 y t2.\n\n\nCódigo para el despliegue del mapa\n# Conversión de datos de puntos de muestreo a objeto sf (vectorial de puntos)\ngeo_puntos &lt;-\n    puntos |&gt;\n    select(plot_id, sample_id, lon, lat, t1_cobertura, t2_cobertura) |&gt;\n    st_as_sf(\n        coords = c(\"lon\", \"lat\"),\n        crs = 4326\n  )\n\ncolores &lt;- \n    colorFactor(\n        palette = c(\n            COLOR_VEGETACION, COLOR_SIN_VEGETACION, COLOR_AGUA, \n            COLOR_NUBES_Y_SOMBRAS, COLOR_SIN_INFORMACION, COLOR_NULO\n        ), \n    levels = c(\n        \"1000-Vegetacion\", \"2000-Sin vegetacion\", \"3000-Agua\",\n        \"4000-Nubes y sombras\", \"5000-Sin informacion\", \"Nulo\"\n    )\n)\n\nleaflet() |&gt;\n    addTiles(group = \"OSM\") |&gt;\n    addProviderTiles(\n        provider = providers$Esri.WorldImagery, \n        group = \"ESRI World Imagery\"\n    ) |&gt;\n    addProviderTiles(\n        provider = providers$CartoDB.DarkMatter,\n        group = \"Dark Matter\"\n    ) |&gt;        \n    addCircleMarkers(\n        data = geo_puntos,\n        radius = 2,\n        fillColor = ~colores(geo_puntos$t1_cobertura),\n        color = ~colores(geo_puntos$t1_cobertura),      \n        # clusterOptions = markerClusterOptions(),\n    popup = paste(\n      paste0(\"&lt;strong&gt;Parcela: &lt;/strong&gt;\", geo_puntos$plot_id),\n      paste0(\"&lt;strong&gt;Muestra: &lt;/strong&gt;\", geo_puntos$sample_id),\n      paste0(\"&lt;strong&gt;Cobertura en t1: &lt;/strong&gt;\", geo_puntos$t1_cobertura),\n      paste0(\"&lt;strong&gt;Cobertura en t2: &lt;/strong&gt;\", geo_puntos$t2_cobertura),\n      sep = '&lt;br/&gt;'\n    ),      \n        group = \"Cobertura en t1\"\n    ) |&gt;\n  addLegend(\n    position = \"bottomleft\",    \n    pal = colores,\n    values = geo_puntos$t1_cobertura,\n    title = \"Cobertura en t1\",\n    group = \"Cobertura en t1\"    \n  ) |&gt;      \n    addCircleMarkers(\n        data = geo_puntos,\n        radius = 2,\n        fillColor = ~colores(geo_puntos$t2_cobertura),\n        color = ~colores(geo_puntos$t2_cobertura),      \n        # clusterOptions = markerClusterOptions(),\n    popup = paste(\n      paste0(\"&lt;strong&gt;Parcela: &lt;/strong&gt;\", geo_puntos$plot_id),\n      paste0(\"&lt;strong&gt;Muestra: &lt;/strong&gt;\", geo_puntos$sample_id),\n      paste0(\"&lt;strong&gt;Cobertura en t1: &lt;/strong&gt;\", geo_puntos$t1_cobertura),\n      paste0(\"&lt;strong&gt;Cobertura en t2: &lt;/strong&gt;\", geo_puntos$t2_cobertura),\n      sep = '&lt;br/&gt;'\n    ),      \n        group = \"Cobertura en t2\"\n    ) |&gt;    \n  addLegend(\n    position = \"bottomleft\",    \n    pal = colores,\n    values = geo_puntos$t2_cobertura,\n    title = \"Cobertura en t2\",\n    group = \"Cobertura en t2\"    \n  ) |&gt;  \n    addLayersControl(\n        baseGroups = c(\"OSM\", \"ESRI World Imagery\", \"Dark Matter\"),\n        overlayGroups = c(\"Cobertura en t1\", \"Cobertura en t2\"),\n    )\n\n\n\n\n\n\n\n\nDistribución de puntos de muestreo en clases de cobertura\nLa distribución de los puntos de muestreo en clases de cobertura de la tierra, en t1 y t2, se muestra en un gráfico de barras y en un gráfico de pastel, ambos elaborados con el paquete Plotly.\n\nt1\n\n\nCódigo para el despliegue del gráfico de barras\n# Gráfico de barras ggplot2\ngrafico_barras &lt;-\n    puntos |&gt;\n    ggplot(aes(x = fct_infreq(t1_cobertura), fill = fct_infreq(t1_cobertura))) +\n    geom_bar(\n    aes(\n      text = paste0(\n        \"Cantidad de puntos: \", after_stat(count)\n      )     \n    )\n    ) +\n    scale_fill_manual(values = COLORES_COBERTURA) +\n    xlab(\"Cobertura\") +\n    ylab(\"Cantidad de puntos\") +\n    labs(fill = \"Cobertura\") +\n    theme_clean() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.title = element_blank(),\n    legend.box.background = element_blank(),\n    legend.key = element_blank()\n  )\n\n# Gráfico de barras plotly\nggplotly(grafico_barras, tooltip = \"text\") |&gt; \n  config(locale = 'es') |&gt;\n  layout(\n    showlegend = TRUE,\n    legend = list(\n      title = list(text = ''),\n      bordercolor = 'rgba(0,0,0,0)' # Establece el color del borde a transparente\n    )\n  ) \n\n\n\n\n\n\n\n\nCódigo para el despliegue del gráfico de pastel\n# Total de puntos\nconteo &lt;- puntos |&gt;\n    count(t1_cobertura)\n\n# Asegurarse de que los colores se asignen en el orden correcto\ncolores_para_plotly &lt;- COLORES_COBERTURA[as.character(conteo$t1_cobertura)]\n\n# Gráfico de pastel plotly\nplot_ly(\n    conteo, \n    labels = ~ t1_cobertura, \n    values = ~ n,\n    marker = list(colors = colores_para_plotly)\n) |&gt;\nadd_pie()\n\n\n\n\n\n\n\n\nt2\n\n\nCódigo para el despliegue del gráfico de barras\n# Gráfico de barras ggplot2\ngrafico_barras &lt;-\n    puntos |&gt;\n    ggplot(aes(x = fct_infreq(t2_cobertura), fill = fct_infreq(t2_cobertura))) +\n    geom_bar(\n    aes(\n      text = paste0(\n        \"Cantidad de puntos: \", after_stat(count)\n      )     \n    )\n    ) +\n    scale_fill_manual(values = COLORES_COBERTURA) +\n    xlab(\"Cobertura\") +\n    ylab(\"Cantidad de puntos\") +\n    labs(fill = \"Cobertura\") +\n    theme_clean() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.title = element_blank(),\n    legend.box.background = element_blank(),\n    legend.key = element_blank()\n  )\n\n# Gráfico de barras plotly\nggplotly(grafico_barras, tooltip = \"text\") |&gt; \n  config(locale = 'es') |&gt;\n  layout(\n    showlegend = TRUE,\n    legend = list(\n      title = list(text = ''),\n      bordercolor = 'rgba(0,0,0,0)' # Establece el color del borde a transparente\n    )\n  ) \n\n\n\n\n\n\n\n\nCódigo para el despliegue del gráfico de pastel\n# Total de puntos\nconteo &lt;- puntos |&gt;\n    count(t2_cobertura)\n\n# Asegurarse de que los colores se asignen en el orden correcto\ncolores_para_plotly &lt;- COLORES_COBERTURA[as.character(conteo$t2_cobertura)]\n\n# Gráfico de pastel plotly\nplot_ly(\n    conteo, \n    labels = ~ t2_cobertura, \n    values = ~ n,\n    marker = list(colors = colores_para_plotly)\n) |&gt;\nadd_pie()\n\n\n\n\n\n\n\n\n\n\nUso del suelo\n\nMapa\nEl siguiente mapa interactivo, implementado con el paquete Leaflet, muestra la distribución espacial de la interpretación de la variable de uso del suelo en t1 y t2.\n\n\nCódigo para el despliegue del mapa\n# Conversión de datos de puntos de muestreo a objeto sf (vectorial de puntos)\ngeo_puntos &lt;-\n    puntos |&gt;\n    select(plot_id, sample_id, lon, lat, t1_uso, t2_uso) |&gt;\n    st_as_sf(\n        coords = c(\"lon\", \"lat\"),\n        crs = 4326\n  )\n\ncolores &lt;- \n    colorFactor(\n        palette = c(\n            COLOR_MC_BOSQUES, COLOR_AGRICULTURA, COLOR_GANADERIA_Y_PASTOS, \n            COLOR_ZONAS_HUMEDALES, COLOR_INFRAESTRUCTURA, COLOR_OTRAS_TIERRAS, \n            COLOR_NO_CLASIFICACION, COLOR_NULO\n        ), \n    levels = c(\n        \"1000-MC bosques\", \"2000-Agricultura\", \"3000-Ganad y past\",\n        \"4000-Zonas humed\", \"5000-Infraest\", \"6000-Otras tierras\",\n        \"7000 No clasif\", \"Nulo\"\n    )\n)\n\nleaflet() |&gt;\n    addTiles(group = \"OSM\") |&gt;\n    addProviderTiles(\n        provider = providers$Esri.WorldImagery, \n        group = \"ESRI World Imagery\"\n    ) |&gt;\n    addProviderTiles(\n        provider = providers$CartoDB.DarkMatter,\n        group = \"Dark Matter\"\n    ) |&gt;        \n    addCircleMarkers(\n        data = geo_puntos,\n        radius = 2,\n        fillColor = ~colores(geo_puntos$t1_uso),\n        color = ~colores(geo_puntos$t1_uso),        \n        # clusterOptions = markerClusterOptions(),\n    popup = paste(\n      paste0(\"&lt;strong&gt;Parcela: &lt;/strong&gt;\", geo_puntos$plot_id),\n      paste0(\"&lt;strong&gt;Muestra: &lt;/strong&gt;\", geo_puntos$sample_id),\n      paste0(\"&lt;strong&gt;Uso en t1: &lt;/strong&gt;\", geo_puntos$t1_uso),\n      paste0(\"&lt;strong&gt;Uso en t2: &lt;/strong&gt;\", geo_puntos$t2_uso),\n      sep = '&lt;br/&gt;'\n    ),      \n        group = \"Uso en t1\"\n    ) |&gt;\n  addLegend(\n    position = \"bottomleft\",    \n    pal = colores,\n    values = geo_puntos$t1_uso,\n    title = \"Uso en t1\",\n    group = \"Uso en t1\"    \n  ) |&gt;      \n    addCircleMarkers(\n        data = geo_puntos,\n        radius = 2,\n        fillColor = ~colores(geo_puntos$t2_uso),\n        color = ~colores(geo_puntos$t2_uso),        \n        # clusterOptions = markerClusterOptions(),\n    popup = paste(\n      paste0(\"&lt;strong&gt;Parcela: &lt;/strong&gt;\", geo_puntos$plot_id),\n      paste0(\"&lt;strong&gt;Muestra: &lt;/strong&gt;\", geo_puntos$sample_id),\n      paste0(\"&lt;strong&gt;Uso en t1: &lt;/strong&gt;\", geo_puntos$t1_uso),\n      paste0(\"&lt;strong&gt;Uso en t2: &lt;/strong&gt;\", geo_puntos$t2_uso),\n      sep = '&lt;br/&gt;'\n    ),      \n        group = \"Uso en t2\"\n    ) |&gt;    \n  addLegend(\n    position = \"bottomleft\",    \n    pal = colores,\n    values = geo_puntos$t2_uso,\n    title = \"Uso en t2\",\n    group = \"Uso en t2\"    \n  ) |&gt;  \n    addLayersControl(\n        baseGroups = c(\"OSM\", \"ESRI World Imagery\", \"Dark Matter\"),\n        overlayGroups = c(\"Uso en t1\", \"Uso en t2\"),\n    )\n\n\n\n\n\n\n\n\nDistribución de puntos de muestreo en clases de uso\nLa distribución de los puntos de muestreo en clases de uso del suelo, en t1 y t2, se muestra en un gráfico de barras y en un gráfico de pastel, ambos elaborados con el paquete Plotly.\n\nt1\n\n\nCódigo para el despliegue del gráfico de barras\n# Gráfico de barras ggplot2\ngrafico_barras &lt;-\n    puntos |&gt;\n    ggplot(aes(x = fct_infreq(t1_uso), fill = fct_infreq(t1_uso))) +\n    geom_bar(\n    aes(\n      text = paste0(\n        \"Cantidad de puntos: \", after_stat(count)\n      )     \n    )\n    ) +\n    scale_fill_manual(values = COLORES_USO) +\n    xlab(\"Uso\") +\n    ylab(\"Cantidad de puntos\") +\n    labs(fill = \"Uso\") +\n    theme_clean() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.title = element_blank(),\n    legend.box.background = element_blank(),\n    legend.key = element_blank()\n  )\n\n# Gráfico de barras plotly\nggplotly(grafico_barras, tooltip = \"text\") |&gt; \n  config(locale = 'es') |&gt;\n  layout(\n    showlegend = TRUE,\n    legend = list(\n      title = list(text = ''),\n      bordercolor = 'rgba(0,0,0,0)' # Establece el color del borde a transparente\n    )\n  ) \n\n\n\n\n\n\n\n\nCódigo para el despliegue del gráfico de pastel\n# Total de puntos\nconteo &lt;- puntos |&gt;\n    count(t1_uso)\n\n# Asegurarse de que los colores se asignen en el orden correcto\ncolores_para_plotly &lt;- COLORES_USO[as.character(conteo$t1_uso)]\n\n# Gráfico de pastel plotly\nplot_ly(\n    conteo, \n    labels = ~ t1_uso, \n    values = ~ n,\n    marker = list(colors = colores_para_plotly)\n) |&gt;\nadd_pie()\n\n\n\n\n\n\n\n\nt2\n\n\nCódigo para el despliegue del gráfico de barras\n# Gráfico de barras ggplot2\ngrafico_barras &lt;-\n    puntos |&gt;\n    ggplot(aes(x = fct_infreq(t2_uso), fill = fct_infreq(t2_uso))) +\n    geom_bar(\n    aes(\n      text = paste0(\n        \"Cantidad de puntos: \", after_stat(count)\n      )     \n    )\n    ) +\n    scale_fill_manual(values = COLORES_USO) +\n    xlab(\"Uso\") +\n    ylab(\"Cantidad de puntos\") +\n    labs(fill = \"Uso\") +\n    theme_clean() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.title = element_blank(),\n    legend.box.background = element_blank(),\n    legend.key = element_blank()\n  )\n\n# Gráfico de barras plotly\nggplotly(grafico_barras, tooltip = \"text\") |&gt; \n  config(locale = 'es') |&gt;\n  layout(\n    showlegend = TRUE,\n    legend = list(\n      title = list(text = ''),\n      bordercolor = 'rgba(0,0,0,0)' # Establece el color del borde a transparente\n    )\n  ) \n\n\n\n\n\n\n\n\nCódigo para el despliegue del gráfico de pastel\n# Total de puntos\nconteo &lt;- puntos |&gt;\n    count(t2_uso)\n\n# Asegurarse de que los colores se asignen en el orden correcto\ncolores_para_plotly &lt;- COLORES_USO[as.character(conteo$t2_uso)]\n\n# Gráfico de pastel plotly\nplot_ly(\n    conteo, \n    labels = ~ t2_uso, \n    values = ~ n,\n    marker = list(colors = colores_para_plotly)\n) |&gt;\nadd_pie()"
  },
  {
    "objectID": "evm-casos-estudio/posts/evm-caso-estudio-01.html#análisis-con-el-paquete-fiesta",
    "href": "evm-casos-estudio/posts/evm-caso-estudio-01.html#análisis-con-el-paquete-fiesta",
    "title": "SIMOCUTE - Ejercicio metodológico de interpretación de puntos de muestreo",
    "section": "Análisis con el paquete FIESTA",
    "text": "Análisis con el paquete FIESTA\nEn esta sección se analizan los datos con el paquete FIESTA y su módulo de inventarios basados en fotografías (Photo-Based). Este módulo calcula estimaciones de población y errores de muestreo asociados. A diferencia de los estimadores tradicionales del libro verde de FIA (utilizados en otros módulos de FIESTA), que se construyeron basándose en el paradigma de muestreo finito utilizando parcelas de muestra con área distinta, los estimadores basados en fotos se construyeron en el contexto del paradigma de muestreo infinito, junto con el concepto de una región de soporte. FIESTA incluye estimadores no proporcionales para estimaciones de área y cobertura porcentual por dominio, y estimadores de media de cocientes para estimaciones de área y cobertura porcentual dentro del dominio, y soporta la post-estratificación para reducir la varianza.\nPrimero se analiza la variable de cobertura de la tierra y posteriormente la variable de uso del suelo. En ambos casos, se calcula el porcentaje de cada clase en cada parcela y el porcentaje total de cada clase en el área de estudio, tanto en t1 como en t2. Por último, se analiza el flujo de cambios de t1 a t2.\n\nCobertura de la tierra\n\nPorcentaje de coberturas por parcela\nSe utiliza la función datPBpnt2pct para transponer los datos de puntos a porcentajes en cada parcela de monitoreo.\n\nt1\n\n# Transposición de puntos a porcentajes de coberturas por parcela en t1\nporcentaje_cobertura_parcela_t1 &lt;- \n    datPBpnt2pct(puntos, uniqueid=\"plot_id\", tvar=\"t1_cobertura\")\n\n\n\nCódigo para el despliegue de la tabla\n# Despliegue de la transposición de puntos a porcentajes de coberturas por parcela en t1\nporcentaje_cobertura_parcela_t1 |&gt;\n  datatable(\n    caption = \"Porcentaje de coberturas por parcela en t1\",\n    rownames = FALSE,\n    options = list(\n      pageLength = 5,\n      language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Spanish.json')\n    )\n  )\n\n\n\n\n\n\n\n\nt2\n\n# Transposición de puntos a porcentajes de coberturas por parcela en t2\nporcentaje_cobertura_parcela_t2 &lt;- \n    datPBpnt2pct(puntos, uniqueid=\"plot_id\", tvar=\"t2_cobertura\")\n\n\n\nCódigo para el despliegue de la tabla\n# Despliegue de la transposición de puntos a porcentajes de coberturas por parcela en t2\nporcentaje_cobertura_parcela_t2 |&gt;\n  datatable(\n    caption = \"Porcentaje de coberturas por parcela en t2\",\n    rownames = FALSE,\n    options = list(\n      pageLength = 5,\n      language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Spanish.json')\n    )\n  )\n\n\n\n\n\n\n\n\n\nPorcentaje total de coberturas\nLa función modPBpop() genera datos de poblaciones, los cuales se utilizan posteriormente para calcular el porcentaje total (en todas las parcelas) en t1 y t2.\n\n# Generación de datos de poblaciones\nPBpopdat &lt;- modPBpop(pnt = puntos,\n    pltassgnid = \"plot_id\",\n    pntid = \"sample_id\")\n\n\nt1\nLa función modPB() genera las estimaciones de los porcentajes y los errores de muestreo.\n\n# Estimación de la distribución de coberturas en t1\nLCt1 &lt;- modPB(PBpopdat = PBpopdat, rowvar = \"t1_cobertura\")\n\nresults.LCt1 &lt;- LCt1$est\n\n\n\nCódigo para el despliegue de la tabla\n# Despliegue de la distribución de coberturas en t1\nresults.LCt1 |&gt;\n  datatable(\n    caption = \"Distribución de coberturas en t1\",\n    rownames = FALSE,\n    options = list(\n      pageLength = 10,\n      language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Spanish.json')\n    )\n  )\n\n\n\n\n\n\n\n\nt2\n\n# Estimación de la distribución de coberturas en t2\nLCt2 &lt;- modPB(PBpopdat = PBpopdat, rowvar = \"t2_cobertura\")\n\nresults.LCt2 &lt;- LCt2$est\n\n\n\nCódigo para el despliegue de la tabla\n# Despliegue de la distribución de coberturas en t2\nresults.LCt2 |&gt;\n  datatable(\n    caption = \"Distribución de coberturas en t2\",\n    rownames = FALSE,\n    options = list(\n      pageLength = 10,\n      language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Spanish.json')\n    )\n  )\n\n\n\n\n\n\n\n\n\nCambios porcentuales en coberturas de t1 a t2\n\nPBpoparea &lt;- \n    modPBpop(\n      pnt = puntos,\n      pltassgnid = \"plot_id\",\n      pntid = \"sample_id\"\n  )\n\n# Cobertura en t1 vs cobertura en t2\ncoberT1vT2 &lt;- \n    modPB(\n        PBpopdat = PBpoparea,\n      rowvar = \"t1_cobertura\",\n      colvar = \"t2_cobertura\"\n    )\n\n\n\nCódigo para el despliegue de la tabla\n# Despliegue de datos en una tabla\ncoberT1vT2$est |&gt;\n  datatable(\n    caption = \"Cobertura en t1 vs cobertura en t2\",\n    rownames = FALSE,\n    options = list(\n      pageLength = 10,\n      language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Spanish.json')\n    )\n  )\n\n\n\n\n\n\nParte de la información de la tabla anterior se muestra en el siguiente gráfico de líneas.\n\n\nCódigo para el despliegue del gráfico de líneas\nLCt1.extract &lt;- data.frame(LCt1$est$t1_cobertura, LCt1$est$Estimate)\n\n# Eliminación de la fila \"Total\"\nLCt1.extract &lt;- \n    LCt1.extract |&gt;\n  filter(LCt1.est.t1_cobertura != \"Total\")\n\nYear2006 &lt;- as.data.frame(c(2006, 2006, 2006, 2006, 2006, 2006))\nnames(Year2006)[1] &lt;- \"Year\"\nLCt1.extract &lt;- data.frame(LCt1.extract, Year2006)\nnames(LCt1.extract)[1] &lt;- \"Variable\"\nnames(LCt1.extract)[2] &lt;- \"Value\"\n\n\nLCt2.extract &lt;- data.frame(LCt2$est$t2_cobertura, LCt2$est$Estimate)\n\n# Eliminación de la fila \"Total\"\nLCt2.extract &lt;- \n    LCt2.extract |&gt;\n  filter(LCt2.est.t2_cobertura != \"Total\")\n\nYear2019 &lt;- as.data.frame(c(2019, 2019, 2019, 2019, 2019, 2019))\nnames(Year2019)[1] &lt;- \"Year\"\nLCt2.extract &lt;- data.frame(LCt2.extract, Year2019)\nnames(LCt2.extract)[1] &lt;- \"Variable\"\nnames(LCt2.extract)[2] &lt;- \"Value\"\n\nLCt.1y2 &lt;- rbind(LCt2.extract, LCt1.extract)\n\nLCt.1y2$Value &lt;- as.numeric(LCt.1y2$Value)\n\n# Gráfico de líneas en ggplot2\ngrafico_lineas &lt;-\n    ggplot(data = LCt.1y2, aes(\n        x = Year,\n        y = Value,\n        color = factor(Variable)\n    )) +\n    geom_line(size = 1) +\n    scale_x_continuous(limits = c(2006, 2019), breaks = c(2006, 2019)) +\n    scale_y_continuous(limits = c(0, 100), breaks = seq(0, 100, 10)) +\n    xlab(\"Año de análisis\") + \n    ylab (\"Porcentaje de cobertura\") +\n  scale_colour_manual(values = \n    c(\"1000-Vegetacion\"      = COLOR_VEGETACION,\n      \"2000-Sin vegetacion\"  = COLOR_SIN_VEGETACION,\n      \"3000-Agua\"            = COLOR_AGUA,\n        \"4000-Nubes y sombras\" = COLOR_NUBES_Y_SOMBRAS,\n        \"5000-Sin informacion\" = COLOR_SIN_INFORMACION,\n        \"Nulo\"                 = COLOR_NULO\n    )\n  ) +\n    labs(colour = \"Cobertura de la tierra\") +\n    theme_clean() +\n    theme(legend.position = \"top\")\n\nggplotly(grafico_lineas) |&gt; \n  config(locale = 'es') |&gt;\n  layout(\n    showlegend = TRUE,\n    legend = list(\n      title = list(text = ''),\n      bordercolor = 'rgba(0,0,0,0)'\n    )\n  ) \n\n\n\n\n\n\n\n\nCambios de áreas de coberturas de t1 a t2\n\nPBpoparea &lt;- \n    modPBpop(\n      pnt = puntos,\n      pltassgnid = \"plot_id\",\n      pntid = \"sample_id\",\n      unitarea = AREA_ESTUDIO\n  )\n\n# Cobertura en t1 vs cobertura en t2\ncoberT1vT2 &lt;- \n    modPB(\n        PBpopdat = PBpoparea,\n      rowvar = \"t1_cobertura\",\n      colvar = \"t2_cobertura\",\n        tabtype = \"AREA\"\n    )\n\n\n\nCódigo para el despliegue de la tabla\n# Despliegue de datos en una tabla\ncoberT1vT2$est |&gt;\n  datatable(\n    caption = \"Cobertura en t1 vs cobertura en t2\",\n    rownames = FALSE,\n    options = list(\n      pageLength = 10,\n      language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Spanish.json')\n    )\n  )\n\n\n\n\n\n\nLas cantidades de la tabla anterior están expresadas en acres. La misma información se muestra en el siguiente gráfico de barras, pero en hectáreas (ha).\n\n\nCódigo para el despliegue del gráfico de barras\nPBpoparea &lt;- \n    modPBpop(\n      pnt = puntos,\n      pltassgnid = \"plot_id\",\n      pntid = \"sample_id\",\n      unitarea = AREA_ESTUDIO\n  )\n\n# Area de cobertura en t1\nT1.COBERTURA.area &lt;- \n    modPB(\n        PBpopdat = PBpoparea,\n      rowvar = \"t1_cobertura\",\n        tabtype = \"AREA\"\n    )\n\n# Area de cobertura en t2\nT2.COBERTURA.area &lt;- \n    modPB(\n        PBpopdat = PBpoparea,\n      rowvar = \"t2_cobertura\",\n        tabtype = \"AREA\"\n    )\n\nT1.COBERTURA.area$est &lt;-\n    T1.COBERTURA.area$est |&gt;\n    mutate(Estimate = as.numeric(Estimate))\n\nT2.COBERTURA.area$est &lt;-\n    T2.COBERTURA.area$est |&gt;\n    mutate(Estimate = as.numeric(Estimate))\n\nCambioNetoT1vT2 &lt;- \n  data.frame(\n    cobertura=T2.COBERTURA.area$est$t2_cobertura,\n    estimacion_t1=T1.COBERTURA.area$est$Estimate,\n    estimacion_t2=T2.COBERTURA.area$est$Estimate,\n    cambio_neto.t1at2=T1.COBERTURA.area$est$Estimate-T2.COBERTURA.area$est$Estimate\n  )\n\n# Eliminación de la fila \"Total\"\nCambioNetoT1vT2 &lt;- \n    CambioNetoT1vT2 |&gt;\n  filter(cobertura != \"Total\")\n\n# Conversión de acres a hectáreas\nCambioNetoT1vT2 &lt;- \n    CambioNetoT1vT2 |&gt;\n  mutate(cambio_neto.t1at2 = cambio_neto.t1at2 * 0.40468564)\n\n# Gráfico de barras ggplot2\ngrafico_barras &lt;-\n  ggplot(\n    data=CambioNetoT1vT2,\n    aes(\n      x=reorder(cobertura, cambio_neto.t1at2), \n      y=cambio_neto.t1at2,\n      fill=cobertura\n    )\n  ) +\n  geom_bar(stat=\"identity\") +\n  scale_y_continuous(limits = c(-5000, 7000), breaks= seq(-6000, 6000, 1000)) +\n  coord_flip() +\n  theme_igray() +\n  scale_fill_manual(values = COLORES_COBERTURA) +\n  theme(axis.text.x = element_text(angle = 40, hjust = 0.9))+\n  labs(title = \"\", x = \"Coberturas\", y = \"Área (ha)\")\n  \n# Gráfico de barras plotly\nggplotly(grafico_barras) |&gt; \n  config(locale = 'es') |&gt;\n  layout(\n    showlegend = TRUE,\n    legend = list(\n      title = list(text = ''),\n      bordercolor = 'rgba(0,0,0,0)'\n    )\n  )   \n\n\n\n\n\n\n\n\nTransiciones de t1 a t2\nEl siguiente gráfico de Sankey muestra las cantidades de puntos que han cambiado en las clases entre t1 y t2.\n\n\nCódigo para el despliegue del gráfico de Sankey\npuntos_sankey &lt;-\n    puntos |&gt;\n    select(sample_id, t1_cobertura, t2_cobertura)\n\n# write_csv(puntos_sankey, \"puntos_sankey.csv\")\n# puntos_sankey &lt;- read_csv(\"puntos_sankey.csv\")\n\n# El prefijo es para diferenciar t1 y t2 en el gráfico de Sankey\npuntos_sankey &lt;- \n    puntos_sankey |&gt;\n  mutate(\n    t1_cobertura = paste0(\"T1-\", t1_cobertura),\n    t2_cobertura = paste0(\"T2-\", t2_cobertura)\n  )\n\nlabel &lt;- c(\"T1-1000-Vegetacion\", \"T1-2000-Sin vegetacion\", \"T1-3000-Agua\", \n                     \"T1-4000 Nubes y sombras\", \"T1-5000-Sin informacion\", \"T1-Nulo\",\n                     \"T2-1000-Vegetacion\", \"T2-2000-Sin vegetacion\", \"T2-3000-Agua\", \n                     \"T2-4000 Nubes y sombras\", \"T2-5000-Sin informacion\", \"T2-Nulo\"\n         )\n\ncolor &lt;- c(COLOR_VEGETACION, COLOR_SIN_VEGETACION, COLOR_AGUA, \n           COLOR_NUBES_Y_SOMBRAS, COLOR_SIN_INFORMACION, COLOR_NULO,\n           COLOR_VEGETACION, COLOR_SIN_VEGETACION, COLOR_AGUA, \n           COLOR_NUBES_Y_SOMBRAS, COLOR_SIN_INFORMACION, COLOR_NULO\n         )\n\n# Agregar columnas de códigos para usar en el gráfico de Sankey\npuntos_sankey &lt;- puntos_sankey |&gt;\n  mutate(\n    t1_codigo = case_when(\n      t1_cobertura == 'T1-1000-Vegetacion' ~ 0,\n      t1_cobertura == 'T1-2000-Sin vegetacion' ~ 1,\n      t1_cobertura == 'T1-3000-Agua' ~ 2,\n      t1_cobertura == 'T1-4000 Nubes y sombras' ~ 3,\n      t1_cobertura == 'T1-5000-Sin informacion' ~ 4,\n      t1_cobertura == 'T1-Nulo' ~ 5\n    ),\n    t2_codigo = case_when(\n      t2_cobertura == 'T2-1000-Vegetacion' ~ 6,\n      t2_cobertura == 'T2-2000-Sin vegetacion' ~ 7,\n      t2_cobertura == 'T2-3000-Agua' ~ 8,\n      t2_cobertura == 'T2-4000 Nubes y sombras' ~ 9,\n      t2_cobertura == 'T2-5000-Sin informacion' ~ 10,\n      t2_cobertura == 'T2-Nulo' ~ 11\n    )\n  )\n\n# Contar las combinaciones de t1_codigo y t2_codigo\nconteo_combinaciones &lt;- \n    puntos_sankey |&gt;\n  count(t1_codigo, t2_codigo)\n\n# Crear las listas separadas\nsource &lt;- conteo_combinaciones$t1_codigo\ntarget &lt;- conteo_combinaciones$t2_codigo\nvalue &lt;- conteo_combinaciones$n\n\n# Gráfico de Sankey\ngrafico_sankey &lt;- \n    plot_ly(\n    type = \"sankey\",\n    orientation = \"h\",\n    node = list(\n      label = label,\n      color = color,\n      pad = 15,\n      thickness = 20,\n      line = list(\n        color = \"black\",\n        width = 0.5\n      ),\n      font = list(\n        size = 12,\n        color = \"#000000\",\n        weight = \"bold\"\n      )\n    ),\n    link = list(\n      source = source,\n      target = target,\n      value =  value\n    )\n  )\n\ngrafico_sankey &lt;- \n    grafico_sankey |&gt; \n    layout(\n        title = list(\n            text = \"Transiciones entre t1 y t2\"\n        ),\n    font = list(\n      size = 12,\n      color = \"#000000\",\n      weight = \"bold\"\n    )  \n  )\n\ngrafico_sankey\n\n\n\n\n\n\n\n\n\nUso del suelo\n\nPorcentaje de usos por parcela\n\nt1\n\n# Transposición de puntos a porcentajes de usos por parcela en t1\nporcentaje_uso_parcela_t1 &lt;- \n    datPBpnt2pct(puntos, uniqueid=\"plot_id\", tvar=\"t1_uso\")\n\n\n\nCódigo para el despliegue de la tabla\n# Despliegue de la transposición de puntos a porcentajes de uso por parcela en t1\nporcentaje_uso_parcela_t1 |&gt;\n  datatable(\n    caption = \"Porcentaje de usos por parcela en t1\",\n    rownames = FALSE,\n    options = list(\n      pageLength = 5,\n      language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Spanish.json')\n    )\n  )\n\n\n\n\n\n\n\n\nt2\n\n# Transposición de puntos a porcentajes de uso por parcela en t2\nporcentaje_uso_parcela_t2 &lt;- \n    datPBpnt2pct(puntos, uniqueid=\"plot_id\", tvar=\"t2_uso\")\n\n\n\nCódigo para el despliegue de la tabla\n# Despliegue de la transposición de puntos a porcentajes de usos por parcela en t2\nporcentaje_uso_parcela_t2 |&gt;\n  datatable(\n    caption = \"Porcentaje de usos por parcela en t2\",\n    rownames = FALSE,\n    options = list(\n      pageLength = 5,\n      language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Spanish.json')\n    )\n  )\n\n\n\n\n\n\n\n\n\nPorcentaje total de usos\n\n# Generación de datos de poblaciones\nPBpopdat &lt;- modPBpop(pnt = puntos,\n    pltassgnid = \"plot_id\",\n    pntid = \"sample_id\")\n\n\nt1\n\n# Estimación de la distribución de usos en t1\nLCt1 &lt;- modPB(PBpopdat = PBpopdat, rowvar = \"t1_uso\")\n\nresults.LCt1 &lt;- LCt1$est\n\n\n\nCódigo para el despliegue de la tabla\n# Despliegue de la distribución de usos en t1\nresults.LCt1 |&gt;\n  datatable(\n    caption = \"Distribución de usos en t1\",\n    rownames = FALSE,\n    options = list(\n      pageLength = 10,\n      language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Spanish.json')\n    )\n  )\n\n\n\n\n\n\n\n\nt2\n\n# Estimación de la distribución de usos en t2\nLCt2 &lt;- modPB(PBpopdat = PBpopdat, rowvar = \"t2_uso\")\n\nresults.LCt2 &lt;- LCt2$est\n\n\n\nCódigo para el despliegue de la tabla\n# Despliegue de la distribución de usos en t2\nresults.LCt2 |&gt;\n  datatable(\n    caption = \"Distribución de usos en t2\",\n    rownames = FALSE,\n    options = list(\n      pageLength = 10,\n      language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Spanish.json')\n    )\n  )\n\n\n\n\n\n\n\n\n\nCambios porcentuales en usos de t1 a t2\n\nPBpoparea &lt;- \n    modPBpop(\n      pnt = puntos,\n      pltassgnid = \"plot_id\",\n      pntid = \"sample_id\"\n  )\n\n# Uso en t1 vs uso en t2\nusoT1vT2 &lt;- \n    modPB(\n        PBpopdat = PBpoparea,\n      rowvar = \"t1_uso\",\n      colvar = \"t2_uso\"\n    )\n\n\n\nCódigo para el despliegue de la tabla\n# Despliegue de datos en una tabla\nusoT1vT2$est |&gt;\n  datatable(\n    caption = \"Uso en t1 vs uso en t2\",\n    rownames = FALSE,\n    options = list(\n      pageLength = 10,\n      language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Spanish.json')\n    )\n  )\n\n\n\n\n\n\nParte de la información de la tabla anterior se muestra en el siguiente gráfico de líneas.\n\n\nCódigo para el despliegue del gráfico de líneas\nLCt1.extract &lt;- data.frame(LCt1$est$t1_uso, LCt1$est$Estimate)\n\n# Eliminación de la fila \"Total\"\nLCt1.extract &lt;- \n    LCt1.extract |&gt;\n  filter(LCt1.est.t1_uso != \"Total\")\n\nYear2006 &lt;- as.data.frame(c(2006, 2006, 2006, 2006, 2006, 2006, 2006, 2006))\nnames(Year2006)[1] &lt;- \"Year\"\nLCt1.extract &lt;- data.frame(LCt1.extract, Year2006)\nnames(LCt1.extract)[1] &lt;- \"Variable\"\nnames(LCt1.extract)[2] &lt;- \"Value\"\n\n\nLCt2.extract &lt;- data.frame(LCt2$est$t2_uso, LCt2$est$Estimate)\n\n# Eliminación de la fila \"Total\"\nLCt2.extract &lt;- \n    LCt2.extract |&gt;\n  filter(LCt2.est.t2_uso != \"Total\")\n\nYear2019 &lt;- as.data.frame(c(2019, 2019, 2019, 2019, 2019, 2019, 2019, 2019))\nnames(Year2019)[1] &lt;- \"Year\"\nLCt2.extract &lt;- data.frame(LCt2.extract, Year2019)\nnames(LCt2.extract)[1] &lt;- \"Variable\"\nnames(LCt2.extract)[2] &lt;- \"Value\"\n\nLCt.1y2 &lt;- rbind(LCt2.extract, LCt1.extract)\n\nLCt.1y2$Value &lt;- as.numeric(LCt.1y2$Value)\n\n# Gráfico de líneas en ggplot2\ngrafico_lineas &lt;-\n    ggplot(data = LCt.1y2, aes(\n        x = Year,\n        y = Value,\n        color = factor(Variable)\n    )) +\n    geom_line(size = 1) +\n    scale_x_continuous(limits = c(2006, 2019), breaks = c(2006, 2019)) +\n    scale_y_continuous(limits = c(0, 100), breaks = seq(0, 100, 10)) +\n    xlab(\"Año de análisis\") + \n    ylab (\"Porcentaje de uso\") +\n  scale_colour_manual(values = \n    c(\"1000-MC bosques\"    = COLOR_MC_BOSQUES,\n      \"2000-Agricultura\"   = COLOR_AGRICULTURA,\n      \"3000-Ganad y past\"  = COLOR_GANADERIA_Y_PASTOS,\n        \"4000-Zonas humed\"   = COLOR_ZONAS_HUMEDALES,\n        \"5000-Infraest\"      = COLOR_INFRAESTRUCTURA,\n        \"6000-Otras tierras\" = COLOR_OTRAS_TIERRAS,\n        \"7000 No clasif\"     = COLOR_NO_CLASIFICACION,\n        \"Nulo\"               = COLOR_NULO\n    )\n  ) +\n    labs(colour = \"Uso del suelo\") +\n    theme_clean() +\n    theme(legend.position = \"top\")\n\nggplotly(grafico_lineas) |&gt; \n  config(locale = 'es') |&gt;\n  layout(\n    showlegend = TRUE,\n    legend = list(\n      title = list(text = ''),\n      bordercolor = 'rgba(0,0,0,0)'\n    )\n  ) \n\n\n\n\n\n\n\n\nCambios de áreas de usos de t1 a t2\n\nPBpoparea &lt;- \n    modPBpop(\n      pnt = puntos,\n      pltassgnid = \"plot_id\",\n      pntid = \"sample_id\",\n      unitarea = AREA_ESTUDIO\n  )\n\n# Uso en t1 vs uso en t2\nusoT1vT2 &lt;- \n    modPB(\n        PBpopdat = PBpoparea,\n      rowvar = \"t1_uso\",\n      colvar = \"t2_uso\",\n        tabtype = \"AREA\"\n    )\n\n\n\nCódigo para el despliegue de la tabla\n# Despliegue de datos en una tabla\nusoT1vT2$est |&gt;\n  datatable(\n    caption = \"Uso en t1 vs uso en t2\",\n    rownames = FALSE,\n    options = list(\n      pageLength = 10,\n      language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Spanish.json')\n    )\n  )\n\n\n\n\n\n\nLas cantidades de la tabla anterior están expresadas en acres. La misma información se muestra en el siguiente gráfico de barras, pero en hectáreas (ha).\n\n\nCódigo para el despliegue del gráfico de barras\nPBpoparea &lt;- \n    modPBpop(\n      pnt = puntos,\n      pltassgnid = \"plot_id\",\n      pntid = \"sample_id\",\n      unitarea = AREA_ESTUDIO\n  )\n\n# Area de uso en t1\nT1.USO.area &lt;- \n    modPB(\n        PBpopdat = PBpoparea,\n      rowvar = \"t1_uso\",\n        tabtype = \"AREA\"\n    )\n\n# Area de uso en t2\nT2.USO.area &lt;- \n    modPB(\n        PBpopdat = PBpoparea,\n      rowvar = \"t2_uso\",\n        tabtype = \"AREA\"\n    )\n\nT1.USO.area$est &lt;-\n    T1.USO.area$est |&gt;\n    mutate(Estimate = as.numeric(Estimate))\n\nT2.USO.area$est &lt;-\n    T2.USO.area$est |&gt;\n    mutate(Estimate = as.numeric(Estimate))\n\nCambioNetoT1vT2 &lt;- \n  data.frame(\n    uso=T2.USO.area$est$t2_uso,\n    estimacion_t1=T1.USO.area$est$Estimate,\n    estimacion_t2=T2.USO.area$est$Estimate,\n    cambio_neto.t1at2=T1.USO.area$est$Estimate-T2.USO.area$est$Estimate\n  )\n\n# Eliminación de la fila \"Total\"\nCambioNetoT1vT2 &lt;- \n    CambioNetoT1vT2 |&gt;\n  filter(uso != \"Total\")\n\n# Conversión de acres a hectáreas\nCambioNetoT1vT2 &lt;- \n    CambioNetoT1vT2 |&gt;\n  mutate(cambio_neto.t1at2 = cambio_neto.t1at2 * 0.40468564)\n\n# Gráfico de barras ggplot2\ngrafico_barras &lt;-\n  ggplot(\n    data=CambioNetoT1vT2,\n    aes(\n      x=reorder(uso, cambio_neto.t1at2), \n      y=cambio_neto.t1at2,\n      fill=uso\n    )\n  ) +\n  geom_bar(stat=\"identity\") +\n  scale_y_continuous(limits = c(-5000, 7000), breaks= seq(-6000, 6000, 1000)) +\n  coord_flip() +\n  theme_igray() +\n  scale_fill_manual(values = COLORES_USO) +\n  theme(axis.text.x = element_text(angle = 40, hjust = 0.9))+\n  labs(title = \"\", x = \"Usos\", y = \"Área (ha)\")\n  \n# Gráfico de barras plotly\nggplotly(grafico_barras) |&gt; \n  config(locale = 'es') |&gt;\n  layout(\n    showlegend = TRUE,\n    legend = list(\n      title = list(text = ''),\n      bordercolor = 'rgba(0,0,0,0)'\n    )\n  )   \n\n\n\n\n\n\n\n\nTransiciones de t1 a t2\n\n\nCódigo para el despliegue del gráfico de Sankey\npuntos_sankey &lt;-\n    puntos |&gt;\n    select(sample_id, t1_uso, t2_uso)\n\n# write_csv(puntos_sankey, \"puntos_sankey.csv\")\n# puntos_sankey &lt;- read_csv(\"puntos_sankey.csv\")\n\n# El prefijo es para diferenciar t1 y t2 en el gráfico de Sankey\npuntos_sankey &lt;- \n    puntos_sankey |&gt;\n  mutate(\n    t1_uso = paste0(\"T1-\", t1_uso),\n    t2_uso = paste0(\"T2-\", t2_uso)\n  )\n\nlabel &lt;- c(\"T1-1000-MC bosques\", \"T1-2000-Agricultura\", \"T1-3000-Ganad y past\", \n                     \"T1-4000-Zonas humed\", \"T1-5000-Infraest\", \"T1-6000-Otras tierras\",\n                     \"T1-7000 No clasif\", \"T1-Nulo\",\n                     \"T2-1000-MC bosques\", \"T2-2000-Agricultura\", \"T2-3000-Ganad y past\", \n                     \"T2-4000-Zonas humed\", \"T2-5000-Infraest\", \"T2-6000-Otras tierras\",\n                     \"T2-7000 No clasif\", \"T2-Nulo\"\n                    )\n\ncolor &lt;- c(COLOR_MC_BOSQUES, COLOR_AGRICULTURA, COLOR_GANADERIA_Y_PASTOS, \n           COLOR_ZONAS_HUMEDALES, COLOR_INFRAESTRUCTURA, COLOR_OTRAS_TIERRAS,\n           COLOR_NO_CLASIFICACION, COLOR_NULO,\n           COLOR_MC_BOSQUES, COLOR_AGRICULTURA, COLOR_GANADERIA_Y_PASTOS, \n           COLOR_ZONAS_HUMEDALES, COLOR_INFRAESTRUCTURA, COLOR_OTRAS_TIERRAS,\n           COLOR_NO_CLASIFICACION, COLOR_NULO\n                    )\n\n# Agregar columnas de códigos para usar en el gráfico de Sankey\npuntos_sankey &lt;- puntos_sankey |&gt;\n  mutate(\n    t1_codigo = case_when(\n      t1_uso == 'T1-1000-MC bosques' ~ 0,\n      t1_uso == 'T1-2000-Agricultura' ~ 1,\n      t1_uso == 'T1-3000-Ganad y past' ~ 2,\n      t1_uso == 'T1-4000-Zonas humed' ~ 3,\n      t1_uso == 'T1-5000-Infraest' ~ 4,\n      t1_uso == 'T1-6000-Otras tierras' ~ 5,\n      t1_uso == 'T1-7000 No clasif' ~ 6,\n      t1_uso == 'T1-Nulo' ~ 7\n    ),\n    t2_codigo = case_when(\n      t2_uso == 'T2-1000-MC bosques' ~ 8,\n      t2_uso == 'T2-2000-Agricultura' ~ 9,\n      t2_uso == 'T2-3000-Ganad y past' ~ 10,\n      t2_uso == 'T2-4000-Zonas humed' ~ 11,\n      t2_uso == 'T2-5000-Infraest' ~ 12,\n      t2_uso == 'T2-6000-Otras tierras' ~ 13,\n      t2_uso == 'T2-7000 No clasif' ~ 14,\n      t2_uso == 'T2-Nulo' ~ 15\n    )\n  )\n\n# Contar las combinaciones de t1_codigo y t2_codigo\nconteo_combinaciones &lt;- \n    puntos_sankey |&gt;\n  count(t1_codigo, t2_codigo)\n\n# Crear las listas separadas\nsource &lt;- conteo_combinaciones$t1_codigo\ntarget &lt;- conteo_combinaciones$t2_codigo\nvalue &lt;- conteo_combinaciones$n\n\n# Gráfico de Sankey\ngrafico_sankey &lt;- \n    plot_ly(\n    type = \"sankey\",\n    orientation = \"h\",\n    node = list(\n      label = label,\n      color = color,\n      pad = 15,\n      thickness = 20,\n      line = list(\n        color = \"black\",\n        width = 0.5\n      ),\n      font = list(\n        size = 12,\n        color = \"#000000\",\n        weight = \"bold\"\n      )\n    ),\n    link = list(\n      source = source,\n      target = target,\n      value =  value\n    )\n  )\n\ngrafico_sankey &lt;- \n    grafico_sankey |&gt; \n    layout(\n    font = list(\n      size = 12,\n      color = \"#000000\",\n      weight = \"bold\"\n    )\n  )\n\ngrafico_sankey"
  },
  {
    "objectID": "evm-casos-estudio/posts/evm-caso-estudio-01.html#recursos-de-referencia-y-consulta",
    "href": "evm-casos-estudio/posts/evm-caso-estudio-01.html#recursos-de-referencia-y-consulta",
    "title": "SIMOCUTE - Ejercicio metodológico de interpretación de puntos de muestreo",
    "section": "Recursos de referencia y consulta",
    "text": "Recursos de referencia y consulta\n\nForest Inventory Estimation and Analysis (FIESTA) (sitio oficial de FIESTA)\nFIESTA - Photo-Based Module (módulo de inventarios basados en fotografías de FIESTA)"
  },
  {
    "objectID": "evm/posts/evm-componente-08.html",
    "href": "evm/posts/evm-componente-08.html",
    "title": "Validación y presentación de los resultados",
    "section": "",
    "text": "La validación de las estimaciones realizadas mediante esta metodología constituye una de las fases más importantes dentro del proceso de elaboración de un análisis de EVM. Este proceso tiene como objetivo dar un nivel alto de confianza a los receptores de la información. Para lograr dicho objetivo, la validación debe ser hecha por un equipo externo de expertos que garanticen la transparencia del proceso.\nPor otro lado, se puede realizar un análisis interno siguiendo estas recomendaciones:\n\nAnálisis comparativo con datos de campo de otros proyectos o levantados por instituciones para objetivos específicos.\nSe pueden seleccionar parcelas aleatoriamente para ser revisados por profesionales de instituciones con injerencia en el campo y por tanto conocen el uso y cobertura que se desarrolla en el territorio.\n\nEste proceso de validación debe cumplir con las necesidades que llevaron al estudio de EVM y los requerimientos de entes nacionales y/o internacionales acerca de los valores máximos de incertidumbre permitidos. Se puede mencionar como ejemplo los datos de actividad sobre uso y cobertura de la tierra que se miden para elaborar el Inventario Nacional de Gases de Efecto Invernadero (INGEI), para el cual se requiere que el error no sea mayor a 30% y cada vez debe hacerse un esfuerzo para disminuir la incertidumbre.\nUna vez que los resultados han sido validados, se puede proceder a elaborar el informe con los resultados. Asimismo, se debería detallar el marco metodológico utilizado, las estadísticas del análisis de control y aseguramiento de la calidad y del proceso de validación."
  },
  {
    "objectID": "evm/posts/evm-componente-06.html",
    "href": "evm/posts/evm-componente-06.html",
    "title": "Control de calidad y preparación de los datos para el análisis",
    "section": "",
    "text": "Una vez que la etapa de interpretación ha finalizado, se debe realizar el análisis de la calidad de la información utilizando para ello los resultados de los chequeos de control definidos en las etapas anteriores. El propósito de esta etapa es la de asegurar la calidad y, en caso de ser necesario, aplicar las medidas necesarias e interpretar nuevamente lo que requiera revisión.\nPor otro lado, en esta etapa se realiza una revisión de los datos. La base de datos con toda la información detallada de la interpretación se exporta desde Collect Earth y se hacen los ajustes de forma necesarios (nombres de encabezados, uso de puntos o comas, entre otros) a fin de que sea leída en el algoritmo FIESTA, sin problemas."
  },
  {
    "objectID": "evm/posts/evm-componente-04.html",
    "href": "evm/posts/evm-componente-04.html",
    "title": "Definición del proceso de control y aseguramiento de la calidad",
    "section": "",
    "text": "El objetivo de este proceso debe ser recudir la incertidumbre en la información acerca de los cambios en el uso y la cobertura de la tierra, debida al sesgo asociado al co-registro espacial del mapa y la ubicación de referencia, el sesgo del intérprete, o error en la asignación de la clase de referencia a la unidad espacial; y la variabilidad del intérprete (Ortiz, 2020).\nEste proceso es un componente transversal en todo el estudio de EVM, por lo que debe ser definido desde el inicio y depende mucho de los recursos con los que se cuente para implementar el estudio. No obstante, se sugieren diferentes tipos de controles que se llevaran a cabo antes, durante y después de la interpretación.\nEntre los controles iniciales se recomienda:\n\n\n\n\n\nPor otro lado, en estudios previos se han implementado 3 tipos de controles asociados al desarrollo propio de la interpretación (Presentación 5.6.1):\nA. Chequeos en tiempo real (hot checks): este chequeo se da durante la interpretación y consiste en una retroalimentación inmediata sobre parcelas confusas o dudosas, para lo que el intérprete debe realizar un reporte que enviará al supervisor o persona a cargo y éste responderá en un plazo de 3 o menos días según se establezca al inicio del proyecto.\nB. Chequeos de replicabilidad (blind checks): Este tipo de chequeo tiene el propósito de evaluar la variabilidad entre intérpretes y corregir errores en las clasificaciones. Consiste en la selección aleatoria de un conjunto de parcelas que serán analizadas por dos intérpretes sin que ninguno sepa que son parcelas repetidas. Una tercera persona revisa las consistencias entre cada uno. El porcentaje mínimo de coincidencia debe ser de 95%, de otra forma se tendrá que revisar las interpretaciones.\nC. Chequeos aleatorios (cold checks): Consiste en chequeos de parcelas aleatorios que son revisadas nuevamente y contrastadas con respuestas dadas para esas parcelas por un grupo de evaluadores o intérpretes externos. La interpretación de los evaluadores se tomará como “testigo” y con esto se busca determinar la exactitud de la clasificación de los intérpretes. La coincidencia debe ser mayor a 95%.\nFinalmente, si los criterios definidos no se cumplen, se puede pedir al intérprete revisar y volver a realizar el análisis. De esta manera, se pretende que los datos de salida del modelo representen mucho mejor la realidad y los cambios que se detecten sean reales y no inducidos por error en la interpretación."
  },
  {
    "objectID": "evm/posts/evm-componente-02.html",
    "href": "evm/posts/evm-componente-02.html",
    "title": "Definición del marco metodológico",
    "section": "",
    "text": "Este componente corresponde con la definición de lineamientos técnicos que debe seguir un estudio de EVM, a saber, el diseño de muestreo, las herramientas a utilizar, el sistema de clasificación y su correspondiente nivel en la jerarquía a alcanzar, el nivel de la malla de puntos que requiere el estudio y la fuente primaria de las imágenes para la interpretación."
  },
  {
    "objectID": "evm/posts/evm-componente-02.html#diseño-de-muestreo",
    "href": "evm/posts/evm-componente-02.html#diseño-de-muestreo",
    "title": "Definición del marco metodológico",
    "section": "Diseño de muestreo",
    "text": "Diseño de muestreo\nConsidera el tamaño de la parcela a utilizar y la cantidad de puntos que se distribuirán dentro de cada una. Estos dos aspectos dependerán de los objetivos del estudio definidos en la sección anterior, así como de los recursos y el tiempo con los que se cuente. Para el caso de los estudios de EVM a escala nacional se han utilizado tamaños de parcela de 1 y 2 ha (dependiendo de la definición de bosques que se utiliza para el reporte final: 1 ha definición legal nacional y 2 ha definición para el reporte REDD+), y una distribución de puntos de 3x3, 5x5 y 7x7, tal como se ve en la siguiente imagen.\n\n\n\n\n\nAlgunas consideraciones para la selección del diseño de la parcela se pueden ver en la presentación 5.3.1."
  },
  {
    "objectID": "evm/posts/evm-componente-02.html#herramientas-a-utilizar",
    "href": "evm/posts/evm-componente-02.html#herramientas-a-utilizar",
    "title": "Definición del marco metodológico",
    "section": "Herramientas a utilizar",
    "text": "Herramientas a utilizar\nEsto se refiere al sistema computacional que se utilizará para la interpretación de las parcelas. En el marco del SIMOCUTE se han sugerido dos herramientas para realizar este trabajo, que serían el Collect Earth Desktop (CED) y Collect Earth Online (CEO).\nEl Collect Earth es una herramienta que permite la recopilación de datos a través del programa Google Earth principalmente. Gracias a capas base de imágenes satelitales como Google Earth, Bing Maps, Google Earth Engine, entre otros, el usuario puede analizar imágenes de alta o muy alta resolución mediate la colecta de información con mallas regulares. Existen diferencias importantes entre ambos sistemas a nivel de interfaz, pero la más importante a considerar para un estudio de EVM es que el CED permite la interpretación únicamente a nivel de parcela, mientra que en el CEO se pueden obtener datos a nivel de cada uno de los puntos dentro de las parcelas. Ambas herramientas constituyen software libre."
  },
  {
    "objectID": "evm/posts/evm-componente-02.html#sistema-de-clasificación",
    "href": "evm/posts/evm-componente-02.html#sistema-de-clasificación",
    "title": "Definición del marco metodológico",
    "section": "Sistema de clasificación",
    "text": "Sistema de clasificación\nDesde hace varios años se viene desarrollando en el contexto del SIMOCUTE un sistema de clasificación con 2 claves: uso de la tierra y Cobertura de la Tierra, en consenso con las instituciones miembros del SIMOCUTE. Estos sistemas se caracterizan por ser jerárquico, dinámico, transparente, robusto, exhaustivo y con categorías mutuamente excluyentes. Para un estudio de EVM se debe decidir si se va a implementar uno o ambos de los sistemas de clasificación y el nivel jerárquico en cada uno. Esto va a depender de varios factores como los objetivos del estudio, los recursos y la resolución de las imágenes a utilizar. Para más detalles de ambos sistemas se pueden referir al documento “Sistema de clasificación del uso y la cobertura de la tierra para Costa Rica Versión 2,0 (https://simocute.go.cr/assets/documents/Sistema_de_Clasificaci%C3%B3n_Cobertura_y_Uso_v2.pdf)."
  },
  {
    "objectID": "evm/posts/evm-componente-02.html#nivel-de-la-malla-de-puntos",
    "href": "evm/posts/evm-componente-02.html#nivel-de-la-malla-de-puntos",
    "title": "Definición del marco metodológico",
    "section": "Nivel de la malla de puntos",
    "text": "Nivel de la malla de puntos\nLa malla de puntos oficial del SIMOCUTE es la Malla Nivel 1 que tiene 10 600 puntos (cada punto equivale a una parcela). Para algunas escalas más detalladas, ámbitos locales y regionales, así como cambios de uso más pequeños es necesario implementar una malla anidada densificada de Nivel 2 o incluso 3, las cuales pueden solicitarse al SIMOCUTE."
  },
  {
    "objectID": "evm/posts/evm-componente-02.html#fuente-de-las-imágenes",
    "href": "evm/posts/evm-componente-02.html#fuente-de-las-imágenes",
    "title": "Definición del marco metodológico",
    "section": "Fuente de las imágenes",
    "text": "Fuente de las imágenes\nUn estudio de EVM requiere para obtener resultados más precisos de imágenes de alta o muy alta resolución. Estas imágenes son las que utilizará el Collect Earth para la interpretación. El programa tiene algunas imágenes inlcluídas y permite que el usuario utilice otras de las que disponga. Es importante indicar que, para efectos de ser consistentes y no aumentar el error, se debe seleccionar una fuente de imágenes principal sobre la que se hará la interpretación y las demás se usarán como referencia o en caso de vacíos en las principales."
  },
  {
    "objectID": "evm/posts/evm-componente-01.html",
    "href": "evm/posts/evm-componente-01.html",
    "title": "Definición del marco general del estudio",
    "section": "",
    "text": "Una vez que se han establecido la necesidad y los recursos disponibles para el estudio de EVM, se puede iniciar con la definición del marco metodológico sobre el que se desarrollará el ejercicio (Ver ejemplo en el adjunto: Perfil del proyecto para el Ejercicio de Monitoreo_version_2.1.pdf). Este marco metodológico incluye la escala temporal y espacial acorde con la información requerida, la construcción de los objetivos general y específicos, el alcance del estudio, el tiempo y agenda seguida para llevar a cabo cada fase del proceso y la forma de trabajo adoptada por el equipo. Cada uno de estos puntos se detalla a continuación."
  },
  {
    "objectID": "evm/posts/evm-componente-01.html#escala-espacial-y-temporal",
    "href": "evm/posts/evm-componente-01.html#escala-espacial-y-temporal",
    "title": "Definición del marco general del estudio",
    "section": "Escala espacial y temporal",
    "text": "Escala espacial y temporal\nSe refiere al área geográfica que se requiere evaluar, la cual puede ser local, por ejemplo, un cantón, regional. por ejemplo: provincias, regiones climáticas, regiones productivas, entre otros, o nacional. Cada una de estas escalas requiere más tiempo y recursos según se vaya desde la escala local a una nacional; además, el uso de escalas más detalladas podría implicar la utilización de niveles de malla de puntos más densificados. La escala temporal hace referencia al periodo de estudio, puesto que el propósito principal de la EVM es obtener información sobre el estado actual del territorio y los cambios que ocurren en él, razón por la cual, se define un T1 que corresponde con el año 1 de evaluación y T2 que sería el año 2 y se define según el periodo para el que se requiere información de cambio."
  },
  {
    "objectID": "evm/posts/evm-componente-01.html#objetivos",
    "href": "evm/posts/evm-componente-01.html#objetivos",
    "title": "Definición del marco general del estudio",
    "section": "Objetivos",
    "text": "Objetivos\nEs importante tener bien clara la necesidad para poder construir objetivos pertinentes que puedan ser cumplidos en el tiempo apropiado."
  },
  {
    "objectID": "evm/posts/evm-componente-01.html#alcance",
    "href": "evm/posts/evm-componente-01.html#alcance",
    "title": "Definición del marco general del estudio",
    "section": "Alcance",
    "text": "Alcance\nEn este caso, se hace referencia a aspectos básicos como el nivel de detalle de la información que se requiere recopilar con el estudio, la incertidumbre permitida y las posibles fuentes de error del estudio. Además, en esta etapa se define lo que se requiere medir, es decir, si se requiere interpretar solo el uso de la tierra o, es pertinente también tener información de cobertura y/o ecosistemas. Las definiciones de estas variables se darán más adelante."
  },
  {
    "objectID": "evm/posts/evm-componente-01.html#tiempo-del-estudio",
    "href": "evm/posts/evm-componente-01.html#tiempo-del-estudio",
    "title": "Definición del marco general del estudio",
    "section": "Tiempo del estudio",
    "text": "Tiempo del estudio\nEn esta sección se debe definir el año T1 y el T2, que corresponden con el primer y el último año de medición. Las diferencias entre ambos constituirán el cambio en el uso, cobertura de la tierra o ecosistema, según se esté midiendo.\n\n\n\nEjemplo de una misma parcela vista en el T1 (2005) y T2 (2015)"
  },
  {
    "objectID": "evm/posts/evm-componente-01.html#forma-de-trabajo",
    "href": "evm/posts/evm-componente-01.html#forma-de-trabajo",
    "title": "Definición del marco general del estudio",
    "section": "Forma de trabajo",
    "text": "Forma de trabajo\nEn última instancia, es importante definir la manera más apropiada para llevar a cabo la EVM, en lo referente a la organización del equipo, el abordaje de cada etapa o componente metodológico, la asignación del trabajo a cada involucrado, sean individuos contratados, empresas, instituciones o cualquier otro. Por ejemplo, pueden crearse grupos de trabajo para cada componente: uno que se enfoque en los primeros componentes, los cuales desarrollan el marco metodológico sobre el que se realizará la evaluación; otro que se dedique a la interpretación, que podría estar organizado en subgrupos con un asesor o supervisor para cada uno, el cual fungiría como guía de los intérpretes, al tiempo que realizan el control de la calidad; posteriormente, se puede formar un equipo a cargo del análisis de los datos resultantes de la interpretación. Este último grupo realizaría también otra parte del análisis de calidad de los datos y la evaluación de la incertidumbre. Finalmente, se puede tener un grupo interno o externo que realizaría la validación de los resultados.\n\n\n\nEjemplo de una misma parcela vista en el T1 (2005) y T2 (2015)"
  },
  {
    "objectID": "evm/posts/evm-componente-03.html",
    "href": "evm/posts/evm-componente-03.html",
    "title": "Creación del proyecto",
    "section": "",
    "text": "Una vez definido el marco metodológico de trabajo se procede a elaborar el proyecto para la interpretación en Collect Earth. Esto corresponde con el diseño de las plantillas con cada una de las parcelas y las consultas a realizar sobre el uso y/o la cobertura a utilizar en los años T1 y T2. Las plantillas son elaboradas por una o varias personas encargadas, quienes desarrollarán formularios que completarán los intérpretes para cada variable a medir (uso y/o cobertura) y cada año de medición.\n\n\n\n\n\n\n\n\n\n\nLos pasos para la construcción del proyecto se puede encontrar el siguiente documento 5.5.1 “CEO_Tutorial_Nov_2020.pdf”, el cual incluye desde la creación de una cuenta para trabajar con la plataforma Collect Earth Online, la visualización de un proyecto como práctica para un usuario nuevo, la integración y acceso a los recursos geoespaciales mediante las imàgenes de satélite que maneja la plataforma, el proceso de interpretación de la malla y la parcela a evaluar por el intérprete, la creación de una institución (la organización a inscribirse) y la construcción de proyectos, entre otros temas.\nPor otro lado, puesto que estas herramientas están en constante mejora, se les invita a revisar los recursos de cada programa en los siguientes enlaces: https://openforis.org/materials/, y https://www.collect.earth/about/"
  },
  {
    "objectID": "evm/posts/evm-componente-05.html",
    "href": "evm/posts/evm-componente-05.html",
    "title": "Interpretación de las parcelas",
    "section": "",
    "text": "Una vez que las etapas anteriores están definidas y el proyecto ha sido creado en Collect Earth, se pueda iniciar con el levantamiento de la información de uso, cobertura y cambios. Este proceso implica poner en práctica toda la preparación anterior, es decir, los protocolos y controles previamente definidos.\nSe sugiere realizar un taller inicial con todos los intérpretes sobre el sistema de clasificación a utilizar, la forma en que se realizará la interpretación, las buenas prácticas y definiciones importantes a considerar en la interpretación. Posteriormente, las parcelas se dividen entre los intérpretes o bien, se le indica un número de parcelas que cada uno debe interpretar. Sin embargo, para poder realizar los chequeos ciegos o de replicabilidad es importante definir las parcelas que cada persona debe analizar. Debe indicarse que cada parcela debe tener un ID que permite volver a ella en caso de dudas o corrección de errores.\nEn estudios anteriores se ha realizado la interpretación por medio de talleres, es decir, se cita a todos los intérpretes en un tiempo y lugar específico para que todos trabajen juntos y puedan tener acceso más fácil a los supervisores en caso de parcelas confusas. Dependiendo de la cantidad de intérpretes y de parcelas, esto puede tomar varios días, o incluso varias semanas, por lo que los talleres pueden ocurrir al inicio de esta etapa para asegurar que el proceso se está llevando a cabo correctamente."
  },
  {
    "objectID": "evm/posts/evm-componente-07.html",
    "href": "evm/posts/evm-componente-07.html",
    "title": "Análisis de los datos",
    "section": "",
    "text": "La base de datos obtenida de Collect Earth contiene una gran cantidad datos, por lo que, para facilitar su análisis, reducir el tiempo requerido para el mismo y, en consecuencia, los costos asociados, se ha implementado el algoritmo de análisis “FIESTA” (Forest Inventory Estimation and Analysis), elaborado por el Servicio Forestal de los Estados Unidos y adaptado para su uso en Costa Rica, en el marco del SIMOCUTE (bibliografía).\nFIESTA ha sido desarrollado en un paquete del lenguaje de programación R para procesar los datos, sistematizar los resultados en tablas y gráficos que pueden ser exportados para generar los informes finales del estudio de EVM, y, al mismo tiempo, calcular los errores y medir la incertidumbre asociada. En el enlace adjunto se pueden ver las indicaciones para la aplicación del algoritmo (enlace al documento), es importante indicar que, el archivo en formato *.csv correspondiente a la salida de Collect Earth debe ser ajustado para que el algoritmo pueda procesarlo."
  },
  {
    "objectID": "evm-casos-estudio/posts/evm-caso-estudio-02.html",
    "href": "evm-casos-estudio/posts/evm-caso-estudio-02.html",
    "title": "CATIE - Interpretación de puntos de muestreo de manglares",
    "section": "",
    "text": "FIESTA es una biblioteca de software para análisis de datos de inventarios forestales. En este documento se explica el uso de FIESTA mediante un caso de ejemplo basado en un conjunto de datos de manglares interpretados por el CATIE."
  },
  {
    "objectID": "evm-casos-estudio/posts/evm-caso-estudio-02.html#resumen",
    "href": "evm-casos-estudio/posts/evm-caso-estudio-02.html#resumen",
    "title": "CATIE - Interpretación de puntos de muestreo de manglares",
    "section": "",
    "text": "FIESTA es una biblioteca de software para análisis de datos de inventarios forestales. En este documento se explica el uso de FIESTA mediante un caso de ejemplo basado en un conjunto de datos de manglares interpretados por el CATIE."
  },
  {
    "objectID": "evm-casos-estudio/posts/evm-caso-estudio-02.html#introducción",
    "href": "evm-casos-estudio/posts/evm-caso-estudio-02.html#introducción",
    "title": "CATIE - Interpretación de puntos de muestreo de manglares",
    "section": "Introducción",
    "text": "Introducción\nFIESTA (Forest Inventory Estimation and Analysis) es una biblioteca de software, desarrollada en el lenguaje de programación R, para el análisis de datos de inventarios forestales basados en muestras. Fue desarrollada por el Programa de Inventario y Análisis Forestal (FIA) del Servicio Forestal del Departamento de Agricultura (USDA) de los Estados Unidos.\nEn este documento se detalla el análisis, mediante FIESTA, de un conjunto de datos de 43389 puntos de muestreo de manglares de Costa Rica. Estos datos fueron interpretados por el Centro Agronómico Tropical de Investigación y Enseñanza (CATIE).\nPara cada punto se interpretaron las variables:\n\nUso del suelo.\n\nLa interpretación se realizó en varios tiempos, de los cuales se están considerando dos para este análisis:\n\nt1: 1998.\nt2: 2021.\n\nEl documento fue desarrollado en el sistema de publicación técnica y científica Quarto, el cual combina código en R y sus salidas (tablas, gráficos, mapas) con texto en Markdown."
  },
  {
    "objectID": "evm-casos-estudio/posts/evm-caso-estudio-02.html#trabajo-previo-al-análisis",
    "href": "evm-casos-estudio/posts/evm-caso-estudio-02.html#trabajo-previo-al-análisis",
    "title": "CATIE - Interpretación de puntos de muestreo de manglares",
    "section": "Trabajo previo al análisis",
    "text": "Trabajo previo al análisis\n\nInstalación de software\n\nSistema base de R y herramientas de desarrollo\nPara trabajar con FIESTA, se debe instalar:\n\nEl sistema base de R. R es un lenguaje de programación enfocado en análisis estadístico y visualización de datos.\nLa interfaz de desarrollo integrada RStudio Desktop, la cual proporciona un editor de texto y otras herramientas para escribir programas en R y visualizar sus resultados, entre otras facilidades. También pueden emplearse otros ambientes de desarrollo que ofrecen características similares (ej. Visual Studio Code).\n\n\nVersión mínima de R\nDe acuerdo con su documentación, la versión mínima de R que requiere FIESTA, a la fecha de escritura de este documento (2023-12-02), es la 4.2.0. Puede consultar la versión de su instalación al ejecutar el siguiente comando en la consola de R:\n\n# Versión de R\nR.version.string\n\n[1] \"R version 4.3.2 (2023-10-31 ucrt)\"\n\n\nLa salida del comando anterior debe indicar que la versión de su instalación de R es mayor o igual a 4.2.0.\n\n\n\nPaquetes de R\n\nFIESTA\nEl paquete FIESTA está disponible en CRAN (Comprehensive R Archive Network), un repositorio en línea que alberga una amplia colección de paquetes y extensiones para el lenguaje de programación R, lo que facilita su instalación y actualización a nuevas versiones.\nPara usar FIESTA, debe instalarse primero. Puede utilizar la función install.packages().\n\n# Instalación del paquete FIESTA\ninstall.packages(\"FIESTA\")\n\nEl resultado de la instalación puede verificarse al cargar el paquete con la función library().\n\n# Carga del paquete FIESTA\nlibrary(FIESTA)\n\nSi el comando anterior no genera ningún mensaje de error, FIESTA debe haberse instalado adecuadamente.\n\n\nOtros\nAdemás de FIESTA, se recomienda instalar los siguientes paquetes para procesamiento y visualización de datos.\n\n# Paquete para el desarrollo de documentos computacionales\ninstall.packages(\"rmarkdown\")\n\n# Colección de paquetes para análisis de datos\ninstall.packages(\"tidyverse\")\n\n# Estilos para gráficos de tidyverse\ninstall.packages(\"ggthemes\")\n\n# Paquete para limpieza de datos\ninstall.packages(\"janitor\")\n\n# Paquete para tablas interactivas\ninstall.packages(\"DT\")\n\n# Paquete para graficación interactiva\ninstall.packages(\"plotly\")\n\n# Paquete para mapas interactivos\ninstall.packages(\"leaflet\")\n\n# Funciones adicionales para leaflet\ninstall.packages(\"leaflet.extras\")\n\n# Funciones adicionales para leaflet\ninstall.packages(\"leafem\")\n\nLuego de instalarlos, debe cargar los paquetes con la función library().\n\n# Carga de paquetes adicionales\nlibrary(rmarkdown)\nlibrary(tidyverse)\nlibrary(ggthemes)\nlibrary(janitor)\nlibrary(DT)\nlibrary(plotly)\nlibrary(leaflet)\nlibrary(leaflet.extras)\nlibrary(leafem)\nlibrary(sf) # se instala con FIESTA\n\n\n\n\n\nObtención de este repositorio\nEste documento, junto con otros similares, forma parte de un repositorio en GitHub, una plataforma en línea para compartir código fuente de aplicaciones, basada en el sistema de control de versiones Git. El repositorio contiene el código fuente del documento y los datos que se utilizan en los ejemplos. Su dirección es https://github.com/mesa-monitoreo-puntos/fiesta.\nPuede descargar el repositorio, como un archivo ZIP, de https://github.com/mesa-monitoreo-puntos/fiesta/archive/refs/heads/main.zip\nTambién puede “clonar” el repositorio mediante el comando clone de Git:\n# Clonación de este repositorio\ngit clone https://github.com/mesa-monitoreo-puntos/fiesta.git\nUna vez que el repositorio haya sido descargado o clonado, puede abrirse con RStudio o con otra herramienta de desarrollo.\n\n\nVariables generales\nEn esta sección se definen algunas variables generales del proceso.\n\n\nCódigo para la definición de variables generales\n# Ruta a los datos de puntos de muestreo\nARCHIVO_PUNTOS &lt;- \"../../datos/catie/ceo-Mangle-1998-2005-2007-2016-2021-sample-data-2022-03-23.csv\"\n\n# Colores\nCOLOR_BOSQUE              = \"#266900\" # Corine CR - Bosque denso\nCOLOR_HUMEDAL             = \"#00ccf2\" # Corine EU - Water courses\nCOLOR_NO_DETERMINABLE     = \"#000000\" # Negro\nCOLOR_PASTOS              = \"#ffffa6\" # Corine CR - Pastos limpios\nCOLOR_AGRICULTURA         = \"#Becd05\" # Corine CR - Mosaico de cultivos\nCOLOR_OTRAS_CLASES        = \"#005acf\" # Corine CR - Canales\nCOLOR_PLANTACION_FORESTAL = \"#55ff00\" # Corine CR - Plantación forestal\n\nCOLOR_NULO                = \"#808080\" # Gris\n\n# Paleta de colores de tipos de uso de la tierra\nCOLORES_USO &lt;- \n    c(\n        \"Bosque\"                 = COLOR_BOSQUE,\n        \"T1-Bosque\"              = COLOR_BOSQUE,\n        \"T2-Bosque\"              = COLOR_BOSQUE,\n        \"Humedal\"                = COLOR_HUMEDAL,\n        \"T1-Humedal\"             = COLOR_HUMEDAL,\n        \"T2-Humedal\"             = COLOR_HUMEDAL,   \n        \"No determinable\"        = COLOR_NO_DETERMINABLE,\n        \"T1-No determinable\"     = COLOR_NO_DETERMINABLE,\n        \"T2-No determinable\"     = COLOR_NO_DETERMINABLE,\n        \"Pastos\"                 = COLOR_PASTOS,\n        \"T1-Pastos\"              = COLOR_PASTOS,\n        \"T1-Pastos\"              = COLOR_PASTOS,        \n        \"Agricultura\"            = COLOR_AGRICULTURA,\n        \"T1-Agricultura\"         = COLOR_AGRICULTURA,\n        \"T2-Agricultura\"         = COLOR_AGRICULTURA,\n        \"Otras clases\"           = COLOR_OTRAS_CLASES,\n        \"T1-Otras clases\"        = COLOR_OTRAS_CLASES,\n        \"T2-Otras clases\"        = COLOR_OTRAS_CLASES,\n        \"Plantación Forestal\"    = COLOR_PLANTACION_FORESTAL,\n        \"T1-Plantación Forestal\" = COLOR_PLANTACION_FORESTAL,\n        \"T2-Plantación Forestal\" = COLOR_PLANTACION_FORESTAL,\n        \"Nulo\"                   = COLOR_NULO,\n        \"T1-Nulo\"                = COLOR_NULO,\n        \"T2-Nulo\"                = COLOR_NULO\n    )\n\n# Área de estudio en hectáreas"
  },
  {
    "objectID": "evm-casos-estudio/posts/evm-caso-estudio-02.html#carga-y-limpieza-de-datos",
    "href": "evm-casos-estudio/posts/evm-caso-estudio-02.html#carga-y-limpieza-de-datos",
    "title": "CATIE - Interpretación de puntos de muestreo de manglares",
    "section": "Carga y limpieza de datos",
    "text": "Carga y limpieza de datos\nLos datos de los puntos de muestreo se proporcionaron en un archivo CSV. En el siguiente bloque de código se cargan en el dataframe puntos. Los nombres de las columnas se “limpian” para evitar la presencia de números al inicio y otros problemas que dificultan su manejo. Los valores nulos (NA) se convierten a hileras de texto.\n\n\nCódigo para la carga y limpieza de datos\n# Carga de datos de puntos de muestreo\npuntos &lt;- read_delim(ARCHIVO_PUNTOS)\n\n# Cambio de tipo de datos\npuntos &lt;- \n    puntos |&gt;\n    mutate(\n        plotid = as.numeric(plotid),\n        sampleid = as.numeric(sampleid)\n    )\n\n# Adición de una columna con números consecutivos, como identificador único\npuntos &lt;- \n    puntos |&gt;\n  mutate(\n    id = row_number()\n  ) |&gt;\n  select(id, everything())\n\n# Limpieza de los nombres de columnas\npuntos &lt;- clean_names(puntos)\n\n# Cambio de nombre de columnas\npuntos &lt;- puntos |&gt;\n  rename(\n    plot_id   = plotid,\n    sample_id = sampleid,\n    t1_uso    = clase_de_uso_1998,\n    t2_uso    = clase_de_uso_21\n  )\n\n# Eliminación de espacios en blanco al inicio y al final\npuntos &lt;- puntos |&gt;\n  mutate(\n    t1_uso = trimws(t1_uso),\n    t2_uso = trimws(t2_uso)\n  )\n\n# Reemplazo de valores NA por la hilera \"Nulo\"\npuntos &lt;- \n    puntos |&gt; \n    mutate(\n        t1_uso = replace_na(t1_uso, \"Nulo\"),\n        t2_uso = replace_na(t2_uso, \"Nulo\")\n    )\n\n# Coversión de t1_uso y t2_uso a factores\npuntos &lt;-\n    puntos |&gt;\n    mutate(\n        t1_uso = factor(t1_uso, levels = unique(t1_uso)),\n        t2_uso = factor(t2_uso, levels = unique(t2_uso))        \n    )\n\n\nEl dataframe puntos contiene más de 40 columnas, provenientes del archivo CSV. Algunas de las más importantes para efectos de este análisis son:\n\nplot_id: identificador de la parcela.\nsample_id: identificador del punto de muestreo.\nt1_uso: interpretación de la variable de uso del suelo en t1.\nt2_uso: interpretación de la variable de uso del suelo en t2.\n\nLa siguiente tabla muestra las columnas mencionadas.\n\n\nCódigo para el despliegue de la tabla\n# Despliegue de los datos de puntos de muestreo en una tabla\npuntos |&gt;\n    select(plot_id, sample_id, t1_uso, t2_uso) |&gt;\n    datatable(\n        caption = \"Puntos de muestreo de uso de la tierra\",\n        rownames = FALSE,\n        colnames = c(\n            \"plot_id\", \"sample_id\", \n            \"t1_uso\", \"t2_uso\"\n        ),\n        options = list(\n            pageLength = 5,\n            language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Spanish.json')\n        )\n    )"
  },
  {
    "objectID": "evm-casos-estudio/posts/evm-caso-estudio-02.html#análisis-con-paquetes-básicos-de-r",
    "href": "evm-casos-estudio/posts/evm-caso-estudio-02.html#análisis-con-paquetes-básicos-de-r",
    "title": "CATIE - Interpretación de puntos de muestreo de manglares",
    "section": "Análisis con paquetes básicos de R",
    "text": "Análisis con paquetes básicos de R\nEn esta sección, se analizan los datos con paquetes de R como los de la colección de Tidyverse, Plotly R para gráficos estadísticos interactivos y Leaflet R para mapas interactivos.\n\nUso del suelo\n\nMapa\nEl siguiente mapa interactivo, implementado con el paquete Leaflet, muestra la distribución espacial de la interpretación de la variable de uso del suelo en t1 y t2.\n\n\nCódigo para el despliegue del mapa\n# Conversión de datos de puntos de muestreo a objeto sf (vectorial de puntos)\ngeo_puntos &lt;-\n    puntos |&gt;\n    select(plot_id, sample_id, lon, lat, t1_uso, t2_uso) |&gt;\n    st_as_sf(\n        coords = c(\"lon\", \"lat\"),\n        crs = 4326\n  )\n\ncolores &lt;- \n    colorFactor(\n        palette = c(\n            COLOR_BOSQUE, COLOR_HUMEDAL, COLOR_NO_DETERMINABLE, COLOR_PASTOS, \n      COLOR_AGRICULTURA, COLOR_OTRAS_CLASES, COLOR_PLANTACION_FORESTAL\n        ), \n    levels = c(\n        \"Bosque\", \"Humedal\", \"No determinable\", \"Pastos\",\n        \"Agricultura\", \"Otras clases\", \"Plantación Forestal\"\n    )\n)\n\nleaflet() |&gt;\n    addTiles(group = \"OSM\") |&gt;\n    addProviderTiles(\n        provider = providers$Esri.WorldImagery, \n        group = \"ESRI World Imagery\"\n    ) |&gt;\n    addProviderTiles(\n        provider = providers$CartoDB.DarkMatter,\n        group = \"Dark Matter\"\n    ) |&gt;        \n    addCircleMarkers(\n        data = geo_puntos,\n        radius = 2,\n        fillColor = ~colores(geo_puntos$t1_uso),\n        color = ~colores(geo_puntos$t1_uso),        \n        # clusterOptions = markerClusterOptions(),\n    popup = paste(\n      paste0(\"&lt;strong&gt;Parcela: &lt;/strong&gt;\", geo_puntos$plot_id),\n      paste0(\"&lt;strong&gt;Muestra: &lt;/strong&gt;\", geo_puntos$sample_id),\n      paste0(\"&lt;strong&gt;Uso en t1: &lt;/strong&gt;\", geo_puntos$t1_uso),\n      paste0(\"&lt;strong&gt;Uso en t2: &lt;/strong&gt;\", geo_puntos$t2_uso),\n      sep = '&lt;br/&gt;'\n    ),      \n        group = \"Uso en t1\"\n    ) |&gt;\n  addLegend(\n    position = \"bottomleft\",    \n    pal = colores,\n    values = geo_puntos$t1_uso,\n    title = \"Uso en t1\",\n    group = \"Uso en t1\"    \n  ) |&gt;      \n    addCircleMarkers(\n        data = geo_puntos,\n        radius = 2,\n        fillColor = ~colores(geo_puntos$t2_uso),\n        color = ~colores(geo_puntos$t2_uso),        \n        # clusterOptions = markerClusterOptions(),\n    popup = paste(\n      paste0(\"&lt;strong&gt;Parcela: &lt;/strong&gt;\", geo_puntos$plot_id),\n      paste0(\"&lt;strong&gt;Muestra: &lt;/strong&gt;\", geo_puntos$sample_id),\n      paste0(\"&lt;strong&gt;Uso en t1: &lt;/strong&gt;\", geo_puntos$t1_uso),\n      paste0(\"&lt;strong&gt;Uso en t2: &lt;/strong&gt;\", geo_puntos$t2_uso),\n      sep = '&lt;br/&gt;'\n    ),      \n        group = \"Uso en t2\"\n    ) |&gt;    \n  addLegend(\n    position = \"bottomleft\",    \n    pal = colores,\n    values = geo_puntos$t2_uso,\n    title = \"Uso en t2\",\n    group = \"Uso en t2\"    \n  ) |&gt;  \n    addLayersControl(\n        baseGroups = c(\"OSM\", \"ESRI World Imagery\", \"Dark Matter\"),\n        overlayGroups = c(\"Uso en t1\", \"Uso en t2\"),\n    )\n\n\n\n\n\n\n\n\nDistribución de puntos de muestreo en clases de uso\nLa distribución de los puntos de muestreo en clases de uso del suelo, en t1 y t2, se muestra en un gráfico de barras y en un gráfico de pastel, ambos elaborados con el paquete Plotly.\n\nt1\n\n\nCódigo para el despliegue del gráfico de barras\n# Gráfico de barras ggplot2\ngrafico_barras &lt;-\n    puntos |&gt;\n    ggplot(aes(x = fct_infreq(t1_uso), fill = fct_infreq(t1_uso))) +\n    geom_bar(\n    aes(\n      text = paste0(\n        \"Cantidad de puntos: \", after_stat(count)\n      )     \n    )\n    ) +\n    scale_fill_manual(values = COLORES_USO) +\n    xlab(\"Uso\") +\n    ylab(\"Cantidad de puntos\") +\n    labs(fill = \"Uso\") +\n    theme_clean() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.title = element_blank(),\n    legend.box.background = element_blank(),\n    legend.key = element_blank()\n  )\n\n# Gráfico de barras plotly\nggplotly(grafico_barras, tooltip = \"text\") |&gt; \n  config(locale = 'es') |&gt;\n  layout(\n    showlegend = TRUE,\n    legend = list(\n      title = list(text = ''),\n      bordercolor = 'rgba(0,0,0,0)' # Establece el color del borde a transparente\n    )\n  ) \n\n\n\n\n\n\n\n\nCódigo para el despliegue del gráfico de pastel\n# Total de puntos\nconteo &lt;- puntos |&gt;\n    count(t1_uso)\n\n# Asegurarse de que los colores se asignen en el orden correcto\ncolores_para_plotly &lt;- COLORES_USO[as.character(conteo$t1_uso)]\n\n# Gráfico de pastel plotly\nplot_ly(\n    conteo, \n    labels = ~ t1_uso, \n    values = ~ n,\n    marker = list(colors = colores_para_plotly)\n) |&gt;\nadd_pie()\n\n\n\n\n\n\n\n\nt2\n\n\nCódigo para el despliegue del gráfico de barras\n# Gráfico de barras ggplot2\ngrafico_barras &lt;-\n    puntos |&gt;\n    ggplot(aes(x = fct_infreq(t2_uso), fill = fct_infreq(t2_uso))) +\n    geom_bar(\n    aes(\n      text = paste0(\n        \"Cantidad de puntos: \", after_stat(count)\n      )     \n    )\n    ) +\n    scale_fill_manual(values = COLORES_USO) +\n    xlab(\"Uso\") +\n    ylab(\"Cantidad de puntos\") +\n    labs(fill = \"Uso\") +\n    theme_clean() +\n  theme(\n    axis.text.x = element_text(angle = 45, hjust = 1),\n    legend.title = element_blank(),\n    legend.box.background = element_blank(),\n    legend.key = element_blank()\n  )\n\n# Gráfico de barras plotly\nggplotly(grafico_barras, tooltip = \"text\") |&gt; \n  config(locale = 'es') |&gt;\n  layout(\n    showlegend = TRUE,\n    legend = list(\n      title = list(text = ''),\n      bordercolor = 'rgba(0,0,0,0)' # Establece el color del borde a transparente\n    )\n  ) \n\n\n\n\n\n\n\n\nCódigo para el despliegue del gráfico de pastel\n# Total de puntos\nconteo &lt;- puntos |&gt;\n    count(t2_uso)\n\n# Asegurarse de que los colores se asignen en el orden correcto\ncolores_para_plotly &lt;- COLORES_USO[as.character(conteo$t2_uso)]\n\n# Gráfico de pastel plotly\nplot_ly(\n    conteo, \n    labels = ~ t2_uso, \n    values = ~ n,\n    marker = list(colors = colores_para_plotly)\n) |&gt;\nadd_pie()"
  },
  {
    "objectID": "evm-casos-estudio/posts/evm-caso-estudio-02.html#análisis-con-el-paquete-fiesta",
    "href": "evm-casos-estudio/posts/evm-caso-estudio-02.html#análisis-con-el-paquete-fiesta",
    "title": "CATIE - Interpretación de puntos de muestreo de manglares",
    "section": "Análisis con el paquete FIESTA",
    "text": "Análisis con el paquete FIESTA\nEn esta sección se analizan los datos con el paquete FIESTA y su módulo de inventarios basados en fotografías (Photo-Based). Este módulo calcula estimaciones de población y errores de muestreo asociados. A diferencia de los estimadores tradicionales del libro verde de FIA (utilizados en otros módulos de FIESTA), que se construyeron basándose en el paradigma de muestreo finito utilizando parcelas de muestra con área distinta, los estimadores basados en fotos se construyeron en el contexto del paradigma de muestreo infinito, junto con el concepto de una región de soporte. FIESTA incluye estimadores no proporcionales para estimaciones de área y cobertura porcentual por dominio, y estimadores de media de cocientes para estimaciones de área y cobertura porcentual dentro del dominio, y soporta la post-estratificación para reducir la varianza.\nSe calcula el porcentaje de cada clase de uso del suelo en cada parcela y el porcentaje total de cada clase en el área de estudio, tanto en t1 como en t2. Por último, se analiza el flujo de cambios de t1 a t2.\n\nUso del suelo\n\nPorcentaje de usos por parcela\nSe utiliza la función datPBpnt2pct para transponer los datos de puntos a porcentajes en cada parcela de monitoreo.\n\nt1\n\n# Transposición de puntos a porcentajes de usos por parcela en t1\nporcentaje_uso_parcela_t1 &lt;- \n    datPBpnt2pct(puntos, uniqueid=\"plot_id\", tvar=\"t1_uso\")\n\n\n\nCódigo para el despliegue de la tabla\n# Despliegue de la transposición de puntos a porcentajes de uso por parcela en t1\nporcentaje_uso_parcela_t1 |&gt;\n  datatable(\n    caption = \"Porcentaje de usos por parcela en t1\",\n    rownames = FALSE,\n    options = list(\n      pageLength = 5,\n      language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Spanish.json')\n    )\n  )\n\n\n\n\n\n\n\n\nt2\n\n# Transposición de puntos a porcentajes de uso por parcela en t2\nporcentaje_uso_parcela_t2 &lt;- \n    datPBpnt2pct(puntos, uniqueid=\"plot_id\", tvar=\"t2_uso\")\n\n\n\nCódigo para el despliegue de la tabla\n# Despliegue de la transposición de puntos a porcentajes de usos por parcela en t2\nporcentaje_uso_parcela_t2 |&gt;\n  datatable(\n    caption = \"Porcentaje de usos por parcela en t2\",\n    rownames = FALSE,\n    options = list(\n      pageLength = 5,\n      language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Spanish.json')\n    )\n  )\n\n\n\n\n\n\n\n\n\nPorcentaje total de usos\nLa función modPBpop() genera datos de poblaciones, los cuales se utilizan posteriormente para calcular el porcentaje total (en todas las parcelas) en t1 y t2.\n\n# Generación de datos de poblaciones\nPBpopdat &lt;- modPBpop(pnt = puntos,\n    pltassgnid = \"plot_id\",\n    pntid = \"sample_id\")\n\n\nt1\n\n# Estimación de la distribución de usos en t1\nLCt1 &lt;- modPB(PBpopdat = PBpopdat, rowvar = \"t1_uso\")\n\nresults.LCt1 &lt;- LCt1$est\n\n\n\nCódigo para el despliegue de la tabla\n# Despliegue de la distribución de usos en t1\nresults.LCt1 |&gt;\n  datatable(\n    caption = \"Distribución de usos en t1\",\n    rownames = FALSE,\n    options = list(\n      pageLength = 10,\n      language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Spanish.json')\n    )\n  )\n\n\n\n\n\n\n\n\nt2\n\n# Estimación de la distribución de usos en t2\nLCt2 &lt;- modPB(PBpopdat = PBpopdat, rowvar = \"t2_uso\")\n\nresults.LCt2 &lt;- LCt2$est\n\n\n\nCódigo para el despliegue de la tabla\n# Despliegue de la distribución de usos en t2\nresults.LCt2 |&gt;\n  datatable(\n    caption = \"Distribución de usos en t2\",\n    rownames = FALSE,\n    options = list(\n      pageLength = 10,\n      language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Spanish.json')\n    )\n  )\n\n\n\n\n\n\n\n\n\nCambios porcentuales en usos de t1 a t2\n\nPBpoparea &lt;- \n    modPBpop(\n      pnt = puntos,\n      pltassgnid = \"plot_id\",\n      pntid = \"sample_id\"\n  )\n\n# Uso en t1 vs uso en t2\nusoT1vT2 &lt;- \n    modPB(\n        PBpopdat = PBpoparea,\n      rowvar = \"t1_uso\",\n      colvar = \"t2_uso\"\n    )\n\n\n\nCódigo para el despliegue de la tabla\n# Despliegue de datos en una tabla\nusoT1vT2$est |&gt;\n  datatable(\n    caption = \"Uso en t1 vs uso en t2\",\n    rownames = FALSE,\n    options = list(\n      pageLength = 10,\n      language = list(url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Spanish.json')\n    )\n  )\n\n\n\n\n\n\nParte de la información de la tabla anterior se muestra en el siguiente gráfico de líneas.\n\n\nCódigo para el despliegue del gráfico de líneas\nLCt1.extract &lt;- data.frame(LCt1$est$t1_uso, LCt1$est$Estimate)\n\n# Eliminación de la fila \"Total\"\nLCt1.extract &lt;- \n    LCt1.extract |&gt;\n  filter(LCt1.est.t1_uso != \"Total\")\n\nYear1998 &lt;- as.data.frame(c(1998, 1998, 1998, 1998, 1998, 1998, 1998))\nnames(Year1998)[1] &lt;- \"Year\"\nLCt1.extract &lt;- data.frame(LCt1.extract, Year1998)\nnames(LCt1.extract)[1] &lt;- \"Variable\"\nnames(LCt1.extract)[2] &lt;- \"Value\"\n\n\nLCt2.extract &lt;- data.frame(LCt2$est$t2_uso, LCt2$est$Estimate)\n\n# Eliminación de la fila \"Total\"\nLCt2.extract &lt;- \n    LCt2.extract |&gt;\n  filter(LCt2.est.t2_uso != \"Total\")\n\nYear2021 &lt;- as.data.frame(c(2021, 2021, 2021, 2021, 2021, 2021, 2021))\nnames(Year2021)[1] &lt;- \"Year\"\nLCt2.extract &lt;- data.frame(LCt2.extract, Year2021)\nnames(LCt2.extract)[1] &lt;- \"Variable\"\nnames(LCt2.extract)[2] &lt;- \"Value\"\n\nLCt.1y2 &lt;- rbind(LCt2.extract, LCt1.extract)\n\nLCt.1y2$Value &lt;- as.numeric(LCt.1y2$Value)\n\n# Gráfico de líneas en ggplot2\ngrafico_lineas &lt;-\n    ggplot(data = LCt.1y2, aes(\n        x = Year,\n        y = Value,\n        color = factor(Variable)\n    )) +\n    geom_line(size = 1) +\n    scale_x_continuous(limits = c(1998, 2021), breaks = c(1998, 2021)) +\n    scale_y_continuous(limits = c(0, 100), breaks = seq(0, 100, 10)) +\n    xlab(\"Año de análisis\") + \n    ylab (\"Porcentaje de uso\") +\n  scale_colour_manual(values = \n    c(\"Bosque\"              = COLOR_BOSQUE,\n      \"Humedal\"             = COLOR_HUMEDAL,\n      \"No determinable\"     = COLOR_NO_DETERMINABLE,\n        \"Pastos\"              = COLOR_PASTOS,\n        \"Agricultura\"         = COLOR_AGRICULTURA,\n        \"Otras clases\"        = COLOR_OTRAS_CLASES,\n        \"Plantación Forestal\" = COLOR_PLANTACION_FORESTAL,\n        \"Nulo\"                = COLOR_NULO\n    )\n  ) +\n    labs(colour = \"Uso del suelo\") +\n    theme_clean() +\n    theme(legend.position = \"top\")\n\nggplotly(grafico_lineas) |&gt; \n  config(locale = 'es') |&gt;\n  layout(\n    showlegend = TRUE,\n    legend = list(\n      title = list(text = ''),\n      bordercolor = 'rgba(0,0,0,0)'\n    )\n  ) \n\n\n\n\n\n\n\n\nTransiciones de t1 a t2\nEl siguiente gráfico de Sankey muestra las cantidades de puntos que han cambiado en las clases entre t1 y t2.\n\n\nCódigo para el despliegue del gráfico de Sankey\npuntos_sankey &lt;-\n    puntos |&gt;\n    select(sample_id, t1_uso, t2_uso)\n\n# write_csv(puntos_sankey, \"puntos_sankey.csv\")\n# puntos_sankey &lt;- read_csv(\"puntos_sankey.csv\")\n\n# El prefijo es para diferenciar t1 y t2 en el gráfico de Sankey\npuntos_sankey &lt;- \n    puntos_sankey |&gt;\n  mutate(\n    t1_uso = paste0(\"T1-\", t1_uso),\n    t2_uso = paste0(\"T2-\", t2_uso)\n  )\n\nlabel &lt;- c(\"T1-Bosque\", \"T1-Humedal\", \"T1-No determinable\", \"T1-Pastos\",\n                     \"T1-Agricultura\", \"T1-Otras clases\", \"T1-Plantación Forestal\",\n                     \"T2-Bosque\", \"T2-Humedal\", \"T2-No determinable\", \"T2-Pastos\",\n                     \"T2-Agricultura\", \"T2-Otras clases\", \"T2-Plantación Forestal\"\n                    )\n\ncolor &lt;- c(COLOR_BOSQUE, COLOR_HUMEDAL, COLOR_NO_DETERMINABLE, COLOR_PASTOS, \n           COLOR_AGRICULTURA, COLOR_OTRAS_CLASES, COLOR_PLANTACION_FORESTAL,\n           COLOR_BOSQUE, COLOR_HUMEDAL, COLOR_NO_DETERMINABLE, COLOR_PASTOS, \n           COLOR_AGRICULTURA, COLOR_OTRAS_CLASES, COLOR_PLANTACION_FORESTAL\n                    )\n\n# Agregar columnas de códigos para usar en el gráfico de Sankey\npuntos_sankey &lt;- puntos_sankey |&gt;\n  mutate(\n    t1_codigo = case_when(\n      t1_uso == 'T1-Bosque' ~ 0,\n      t1_uso == 'T1-Humedal' ~ 1,\n      t1_uso == 'T1-No determinable' ~ 2,\n      t1_uso == 'T1-Pastos' ~ 3,\n      t1_uso == 'T1-Agricultura' ~ 4,\n      t1_uso == 'T1-Otras clases' ~ 5,\n      t1_uso == 'T1-Plantación Forestal' ~ 6\n    ),\n    t2_codigo = case_when(\n      t2_uso == 'T2-Bosque' ~ 7,\n      t2_uso == 'T2-Humedal' ~ 8,\n      t2_uso == 'T2-No determinable' ~ 9,\n      t2_uso == 'T2-Pastos' ~ 10,\n      t2_uso == 'T2-Agricultura' ~ 11,\n      t2_uso == 'T2-Otras clases' ~ 12,\n      t2_uso == 'T2-Plantación Forestal' ~ 13\n    )\n  )\n\n# Contar las combinaciones de t1_codigo y t2_codigo\nconteo_combinaciones &lt;- \n    puntos_sankey |&gt;\n  count(t1_codigo, t2_codigo)\n\n# Crear las listas separadas\nsource &lt;- conteo_combinaciones$t1_codigo\ntarget &lt;- conteo_combinaciones$t2_codigo\nvalue &lt;- conteo_combinaciones$n\n\n# Gráfico de Sankey\ngrafico_sankey &lt;- \n    plot_ly(\n    type = \"sankey\",\n    orientation = \"h\",\n    node = list(\n      label = label,\n      color = color,\n      pad = 15,\n      thickness = 20,\n      line = list(\n        color = \"black\",\n        width = 0.5\n      ),\n      font = list(\n        size = 12,\n        color = \"#000000\",\n        weight = \"bold\"\n      )\n    ),\n    link = list(\n      source = source,\n      target = target,\n      value =  value\n    )\n  )\n\ngrafico_sankey &lt;- \n    grafico_sankey |&gt; \n    layout(\n    font = list(\n      size = 12,\n      color = \"#000000\",\n      weight = \"bold\"\n    )\n  )\n\ngrafico_sankey"
  },
  {
    "objectID": "evm-casos-estudio/posts/evm-caso-estudio-02.html#recursos-de-referencia-y-consulta",
    "href": "evm-casos-estudio/posts/evm-caso-estudio-02.html#recursos-de-referencia-y-consulta",
    "title": "CATIE - Interpretación de puntos de muestreo de manglares",
    "section": "Recursos de referencia y consulta",
    "text": "Recursos de referencia y consulta\n\nForest Inventory Estimation and Analysis (FIESTA) (sitio oficial de FIESTA)\nFIESTA - Photo-Based Module (módulo de inventarios basados en fotografías de FIESTA)"
  }
]